{"version":3,"sources":["components/loading-screen/styles.module.css","services/api.ts","services/token.ts","const/const.ts","store/reducers/root-reducer.ts","store/action.ts","store/reducers/user/user-reducer.ts","store/reducers/offers/offers-reducer.ts","store/reducers/reviews/reviews-reducer.ts","store/reducers/offers/offers-selectors.ts","store/reducers/user/user-selectors.ts","store/api-actions.ts","utils/utils.ts","components/card/card.tsx","hooks/useMap.tsx","components/map/map.tsx","components/sort-variants/sort-variants.tsx","components/offers-list/offers-list.tsx","components/main-empty/main-empty.tsx","components/user-navigation/user-navigation.tsx","components/header/header.tsx","components/main/main.tsx","components/login/login.tsx","components/footer/footer.tsx","components/favorites-empty/favorites-empty.tsx","components/favorites/favorites.tsx","store/reducers/reviews/reviews-selectors.ts","components/review-form/review-form.tsx","components/reviews-list/reviews-list.tsx","components/loading-screen/loading-screen.tsx","components/property/property.tsx","components/screen-404/screen-404.tsx","components/private-route/private-route.tsx","components/app/app.tsx","browser-history/browser-history.ts","store/middleware/redirect.ts","index.tsx"],"names":["module","exports","HttpCode","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","AuthorizationStatus","AppRoute","ActionType","RoomTypes","APARTMENT","ROOM","HOUSE","HOTEL","cities","getRandomIndex","min","max","Math","round","random","Markers","Screen","BasicCardImageSize","FavoriteCardImageSize","SortMode","APIRoute","adaptToClient","data","adaptedItem","Object","assign","isFavorite","isPremium","maxAdults","previewImage","host","avatarUrl","id","isPro","name","adaptReviewsToClient","user","NameSpace","TypeOfFavoriteAction","LoginRegexp","EMAIL","PASSWORD","FailMessages","getCity","createAction","GetCityAction","city","payload","getOffers","GetOffersAction","offers","getOfferByID","GetOfferByIDAction","offer","clearOfferByID","ClearOfferByIDAction","getNearByOffers","GetNearByOffers","getReviewsAction","GetReviews","reviews","postReviewAction","PostReview","postReviewError","PostError","clearPostReviewStatus","ClearPostReviewStatus","clearPostReviewError","ClearPostReviewError","getFavoriteOffers","GetFavoriteOffers","favoriteOffers","clearFavoriteOffers","ClearFavoriteOffers","addToFavoriteOffers","AddToFavoriteOffers","favoriteOffer","removeFromFavoriteOffers","RemoveFromFavoriteOffers","requireAuthorization","RequireAuthorization","authStatus","email","requireLogout","RequireLogout","redirectToRoute","RedirectToRoute","url","initialState","authorizationStatus","Unknown","userEmail","undefined","userProcess","createReducer","builder","addCase","state","action","NoAuth","selectedCity","isDataLoaded","nearbyOffers","offersData","map","item","newFavoriteOffer","push","filter","postSuccess","postError","reviewsData","rootReducer","combineReducers","getLoadedDataStatus","getSelectedCity","getNearbyOffers","getFavoriteOffersMemo","createSelector","length","getAuthorizationStatus","getUserEmail","fetchFavoriteOffers","dispatch","_getState","api","a","get","addToFavorites","post","toast","info","removeFromFavorites","handleFavoriteClickAction","status","Auth","Card","listItemHoverHandler","isMainScreen","isFavoriteScreen","isPropertyScreen","title","price","rating","type","useSelector","useDispatch","getScreenClass","className","onMouseOver","evt","preventDefault","onMouseOut","to","pathname","src","width","height","alt","onClick","xlinkHref","style","toUpperCase","memo","useMap","mapRef","useState","setMap","useEffect","current","instance","Map","center","lat","location","latitude","lng","longitude","zoom","layer","TileLayer","attribution","addLayer","defaultCustomIcon","Icon","iconUrl","iconSize","iconAnchor","currentCustomIcon","props","selectedPoint","points","useRef","forEach","point","Marker","setIcon","addTo","setView","ref","SortVariants","onSortModeChange","ACTIVE_SORT_CLASS","isPopular","isPriceUp","isPriceDown","isTopRated","selectedSortMode","setSelectedSortMode","openList","setOpenList","handleSortOpen","prevState","selectSort","setSelectSort","method","tabIndex","element","target","classList","contains","textContent","OffersList","useCallback","onListItemHover","setSelectedPoint","sortedOffers","setSortedOffers","sort","slice","prev","next","sortOffers","window","scrollTo","MainScreenEmpty","UserNavigation","href","delete","removeItem","Header","isWithUserNavigation","MainScreen","offersInSelectedCity","getOffersInSelectedCity","handleCityClick","input","menuCity","randomCity","index","getRandomCity","LoginScreen","loginRef","passwordRef","onSubmit","isValidLogin","login","password","validLoogin","test","validPassword","validate","value","loginAction","placeholder","required","Footer","FavoritesScreenEmpty","FavoritesScreen","favoriteCities","cityFavoriteOffers","handleCityRedirect","currentTarget","getAttribute","entries","entry","getReviews","getReviewPostStatus","getReviewPostError","ReviewForm","params","useParams","parseInt","isPostSuccessfull","isPostError","comment","review","setReview","disabledForm","setDisabledForm","isSubmitDisabled","handleStarClick","postReview","htmlFor","onChange","checked","disabled","maxLength","ReviewsList","sortedReviews","reverse","date","Date","dateTime","toISOString","substring","monthYear","toLocaleString","month","year","LoadingScreen","loader","PropertyScreen","fetchOfferByIDAction","fetchNearByOffersAction","fetchReviewsAction","images","bedrooms","goods","description","image","nearbyOffer","Screen404","textAlign","PrivateRoute","exact","path","render","App","isCheckedAuth","browserHistory","createBrowserHistory","redirect","_store","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","then","ReactDOM","StrictMode","history","document","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,2CCKpDC,E,yDCNAC,EAAsB,wBASfC,EAAY,SAACC,GACxBC,aAAaC,QAAQJ,EAAqBE,K,SDJtCH,O,kCAAAA,M,KAMC,IEFKM,E,cARCC,EACL,IADKA,EAEJ,SAFIA,EAGJ,SAHIA,EAID,aAJCA,EAKA,c,SAGDD,K,YAAAA,E,iBAAAA,E,mBAAAA,M,KAUL,IAgIKE,EAhICC,EAA0B,CACrCC,UAAW,YACXC,KAAM,eACNC,MAAO,QACPC,MAAO,SAKIC,EAAS,CAAC,QAAS,UAAW,WAAY,YAAa,UAAW,cAEzEC,EAAiB,SAACC,EAAaC,GACnC,GAAID,EAAM,GAAKC,EAAM,EACnB,OAAO,EACF,GAAID,EAAMC,EAAK,CAAC,IAAD,EACP,CAACA,EAAKD,GAAlBA,EADmB,KACdC,EADc,KAGtB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAcrCK,EACF,gBADEA,EAEF,uBAGEC,EACL,SADKA,EAED,YAFCA,EAGF,cAGEC,EACJ,IADIA,EAEH,IAGGC,EACJ,IADIA,EAEH,IAGGC,EACF,UADEA,EAED,qBAFCA,EAGC,qBAHDA,EAIA,kBAgBAC,EACH,UADGA,EAEJ,SAFIA,EAGH,UAHGA,EAIF,YAJEA,EAKA,YAOAC,EAAgB,SAACC,GAC5B,IAAMC,EAAcC,OAAOC,OACzB,GACAH,EACA,CACEI,WAAYJ,EAAI,YAChBK,UAAWL,EAAI,WACfM,UAAWN,EAAI,WACfO,aAAcP,EAAI,cAClBQ,KAAM,CACJC,UAAWT,EAAKQ,KAAL,WACXE,GAAIV,EAAKQ,KAAKE,GACdC,MAAOX,EAAKQ,KAAL,OACPI,KAAMZ,EAAKQ,KAAKI,QAUtB,cANOX,EAAW,mBACXA,EAAW,kBACXA,EAAW,kBACXA,EAAW,qBACXA,EAAYO,KAAZ,kBACAP,EAAYO,KAAZ,OACAP,GAGIY,EAAuB,SAACb,GACnC,IAAMC,EAAcC,OAAOC,OACzB,GACAH,EACA,CACEc,KAAM,CACJL,UAAWT,EAAKc,KAAL,WACXJ,GAAIV,EAAKc,KAAKJ,GACdC,MAAOX,EAAKc,KAAL,OACPF,KAAMZ,EAAKc,KAAKF,QAMtB,cAFOX,EAAYa,KAAZ,kBACAb,EAAYa,KAAZ,OACAb,I,SAGGrB,K,8BAAAA,E,kCAAAA,E,sCAAAA,E,0CAAAA,E,oCAAAA,E,gCAAAA,E,gCAAAA,E,qCAAAA,E,wDAAAA,E,sDAAAA,E,iDAAAA,E,qDAAAA,E,+CAAAA,E,yDAAAA,E,kDAAAA,E,oCAAAA,E,iCAAAA,M,KAoBL,I,ECnKKmC,EDmKCC,EACW,EADXA,EAEa,EAGpBC,EAAc,CAClBC,MAAO,4BACPC,SAAU,2BAYCC,EACL,6DADKA,EAEO,6DAFPA,EAGY,kEE1LZC,EAAUC,YACrB1C,EAAW2C,eACX,SAACC,GAAD,MAAmB,CACjBC,QAAS,CACPD,YAKOE,GAAYJ,YACvB1C,EAAW+C,iBACX,SAACC,GAAD,MAA2B,CACzBH,QAAS,CACPG,cAKOC,GAAeP,YAC1B1C,EAAWkD,oBACX,SAACC,GAAD,MAAwB,CACtBN,QAAS,CACPM,aAKOC,GAAiBV,YAAa1C,EAAWqD,sBAEzCC,GAAkBZ,YAC7B1C,EAAWuD,iBACX,SAACP,GAAD,MAA2B,CACzBH,QAAS,CACPG,cAKOQ,GAAmBd,YAC9B1C,EAAWyD,YACX,SAACC,GAAD,MAA6B,CAC3Bb,QAAS,CACPa,eAKOC,GAAmBjB,YAC9B1C,EAAW4D,YACX,SAACF,GAAD,MAA6B,CAC3Bb,QAAS,CACPa,eAKOG,GAAkBnB,YAAa1C,EAAW8D,WAE1CC,GAAwBrB,YAAa1C,EAAWgE,uBAEhDC,GAAuBvB,YAAa1C,EAAWkE,sBAE/CC,GAAoBzB,YAC/B1C,EAAWoE,mBACX,SAACC,GAAD,MAAmC,CACjCxB,QAAS,CACPwB,sBAKOC,GAAsB5B,YAAa1C,EAAWuE,qBAE9CC,GAAsB9B,YACjC1C,EAAWyE,qBACX,SAACC,GAAD,MAAgC,CAC9B7B,QAAS,CACP6B,qBAKOC,GAA2BjC,YACtC1C,EAAW4E,0BACX,SAACF,GAAD,MAAgC,CAC9B7B,QAAS,CACP6B,qBAKOG,GAAuBnC,YAClC1C,EAAW8E,sBACX,SAACC,EAAiCC,GAAlC,MAAsD,CACpDnC,QAAS,CACPkC,aACAC,aAKOC,GAAgBvC,YAAa1C,EAAWkF,eAExCC,GAAkBzC,YAC7B1C,EAAWoF,iBACX,SAACC,GAAD,MAAkB,CAChBxC,QAAS,CACPwC,W,mCC1GOC,GAA0B,CACrCC,oBAAqBzF,EAAoB0F,QACzCC,eAAWC,GAGAC,GAAcC,YAAcN,IAAc,SAACO,GACtDA,EACGC,QAAQjB,IAAsB,SAACkB,EAAOC,GACrCD,EAAMR,oBAAsBS,EAAOnD,QAAQkC,WAC3CgB,EAAMN,UAAYO,EAAOnD,QAAQmC,SAElCc,QAAQb,IAAe,SAACc,GACvBA,EAAMR,oBAAsBzF,EAAoBmG,OAChDF,EAAMN,UAAYH,GAAaG,gBCbxBH,GAA4B,CACvCY,aAAc,QACdlD,OAAQ,GACRmD,cAAc,EACdhD,WAAOuC,EACPU,kBAAcV,EACdrB,eAAgB,IAGLgC,GAAaT,YAAcN,IAAc,SAACO,GACrDA,EACGC,QAAQrD,GAAS,SAACsD,EAAOC,GACxBD,EAAMG,aAAeF,EAAOnD,QAAQD,QAErCkD,QAAQhD,IAAW,SAACiD,EAAOC,GAC1BD,EAAM/C,OAASgD,EAAOnD,QAAQG,OAAOsD,KAAI,SAACC,GAAD,OAAWpF,EAAcoF,MAClER,EAAMI,cAAe,KAEtBL,QAAQ7C,IAAc,SAAC8C,EAAOC,GAC7BD,EAAM5C,MAAQhC,EAAc6E,EAAOnD,QAAQM,UAE5C2C,QAAQ1C,IAAgB,SAAC2C,GACxBA,EAAM5C,MAAQmC,GAAanC,MAC3B4C,EAAMK,aAAed,GAAac,gBAEnCN,QAAQxC,IAAiB,SAACyC,EAAOC,GAAY,IAAD,EAC3CD,EAAMK,aAAN,UAAqBJ,EAAOnD,QAAQG,cAApC,aAAqB,EAAuBsD,KAAI,SAACC,GAAD,OAAWpF,EAAcoF,SAE1ET,QAAQ3B,IAAmB,SAAC4B,EAAOC,GAAY,IAAD,EAC7CD,EAAM1B,eAAN,UAAuB2B,EAAOnD,QAAQwB,sBAAtC,aAAuB,EAA+BiC,KAAI,SAACC,GAAD,OAAWpF,EAAcoF,SAEpFT,QAAQxB,IAAqB,SAACyB,GAC7BA,EAAM1B,eAAiBiB,GAAajB,kBAErCyB,QAAQtB,IAAqB,SAACuB,EAAOC,GACpC,IAAMQ,EAAmBrF,EAAc6E,EAAOnD,QAAQ6B,eACtDqB,EAAM1B,eAAeoC,KAAKD,MAE3BV,QAAQnB,IAA0B,SAACoB,EAAOC,GACzCD,EAAM1B,eAAiB0B,EAAM1B,eAAeqC,QAAO,SAACH,GAAD,OAAUA,EAAKzE,KAAOkE,EAAOnD,QAAQ6B,cAAc5C,YCvC/FwD,GAA6B,CACxC5B,aAASgC,EACTiB,aAAa,EACbC,WAAW,GAGAC,GAAcjB,YAAcN,IAAc,SAACO,GACtDA,EACGC,QAAQtC,IAAkB,SAACuC,EAAOC,GAAY,IAAD,EAC5CD,EAAMrC,QAAN,UAAgBsC,EAAOnD,QAAQa,eAA/B,aAAgB,EAAwB4C,KAAI,SAACC,GAAD,OAAWtE,EAAqBsE,SAE7ET,QAAQnC,IAAkB,SAACoC,EAAOC,GAAY,IAAD,EAC5CD,EAAMrC,QAAN,UAAgBsC,EAAOnD,QAAQa,eAA/B,aAAgB,EAAwB4C,KAAI,SAACC,GAAD,OAAWtE,EAAqBsE,MAC5ER,EAAMY,aAAc,KAErBb,QAAQjC,IAAiB,SAACkC,GACzBA,EAAMa,WAAY,KAEnBd,QAAQ/B,IAAuB,SAACgC,GAC/BA,EAAMY,YAAcrB,GAAaqB,eAElCb,QAAQ7B,IAAsB,SAAC8B,GAC9BA,EAAMa,UAAYtB,GAAasB,iB,SJtBzBzE,K,gBAAAA,E,kBAAAA,E,aAAAA,M,KAML,IAAM2E,GAAcC,cAAe,oBACvC5E,EAAUD,KAAOyD,IADsB,eAEvCxD,EAAUa,OAASqD,IAFoB,eAGvClE,EAAUuB,QAAUmD,IAHmB,I,SKP7B/D,GAAY,SAACiD,GAAD,OAAgCA,EAAM5D,EAAUa,QAAQA,QACpEgE,GAAsB,SAACjB,GAAD,OAA2BA,EAAM5D,EAAUa,QAAQmD,cACzEc,GAAkB,SAAClB,GAAD,OAA0BA,EAAM5D,EAAUa,QAAQkD,cACpEjD,GAAe,SAAC8C,GAAD,OAA2CA,EAAM5D,EAAUa,QAAQG,OAClF+D,GAAkB,SAACnB,GAAD,OAA6CA,EAAM5D,EAAUa,QAAQoD,cACvFjC,GAAoB,SAAC4B,GAAD,OAAgCA,EAAM5D,EAAUa,QAAQqB,gBAC5E8C,GAAwB,SAACrF,GAAD,OAAuCsF,aAAejD,IAAmB,SAACE,GAAD,OAAkC,OAAdA,QAAc,IAAdA,OAAA,EAAAA,EAAgBqC,QAAO,SAACH,GAAD,OAAUA,EAAKzE,KAAOA,KAAIuF,QAAS,MCN/KC,GAAyB,SAACvB,GAAD,OAAuCA,EAAM5D,EAAUD,MAAMqD,qBACtFgC,GAAe,SAACxB,GAAD,OAAsCA,EAAM5D,EAAUD,MAAMuD,W,qCCwC3E+B,GAAsB,2DACjC,WAAOC,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,sEACuBD,EAAIE,IAAkB3G,GAD7C,iBACSE,EADT,EACSA,OAELqG,EAAStD,GAAkB/C,IAH/B,2CADiC,2DAQtB0G,GAAiB,SAAChG,GAAD,gDAC5B,WAAO2F,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,+EAEyBD,EAAII,KAAJ,UAAwB7G,EAAxB,YAA6CY,EAA7C,YAAmDM,IAF5E,gBAEWhB,EAFX,EAEWA,KACPqG,EAASjD,GAAoBpD,IAHjC,gDAKI4G,KAAMC,KAAKzF,GALf,yDAD4B,2DAUjB0F,GAAsB,SAACpG,GAAD,gDACjC,WAAO2F,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,+EAEyBD,EAAII,KAAJ,UAAwB7G,EAAxB,YAA6CY,EAA7C,YAAmDM,IAF5E,gBAEWhB,EAFX,EAEWA,KACPqG,EAAS9C,GAAyBvD,IAHtC,gDAKI4G,KAAMC,KAAKzF,GALf,yDADiC,2DC1DtB2F,GAA4B,SAACC,EAA6B5G,EAAqBM,GAAnD,gDACvC,WAAO2F,EAAUC,GAAjB,UAAAE,EAAA,sDACMQ,IAAWtI,EAAoBuI,KACjCZ,EAAStC,GAAgBpF,IAEzB0H,EADSjG,EACA0G,GAAoBpG,GAEpBgG,GAAehG,IAN5B,2CADuC,yD,QCYzC,SAASwG,GAAT,GAAsH,IAAvGnF,EAAsG,EAAtGA,MAAOoF,EAA+F,EAA/FA,qBAAsBC,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,iBAAkBC,EAAyC,EAAzCA,iBACnEjH,EAA2D0B,EAA3D1B,UAAWE,EAAgDwB,EAAhDxB,aAAcgH,EAAkCxF,EAAlCwF,MAAOC,EAA2BzF,EAA3ByF,MAAOC,EAAoB1F,EAApB0F,OAAQC,EAAY3F,EAAZ2F,KAAMhH,EAAMqB,EAANrB,GACtDN,EAAauH,YAAY5B,GAAsBrF,IAC/CyD,EAAsBwD,YAAYzB,IAkBlCG,EAAWuB,cAKXC,EAAiB,WACrB,QAAO,GAOL,QACE,OAAOnI,EALT,KAAK2H,EACH,OAAO3H,EACT,KAAK4H,EACH,OAAO5H,IAMb,OACE,2BAASoI,UAAS,UAAKV,EAAe,qBAAH,UAA6BS,IAA7B,UAAjB,eAChBE,YApCgB,SAACC,GACdZ,IAGLY,EAAIC,iBACAd,GACFA,EAAqBpF,EAAMrB,MA8BDwH,WA1BX,WACbf,GACFA,OAAqB7C,IAuBvB,UAIIjE,EAEE,sBAAKyH,UAAU,mBAAf,SACE,8CAEA,GAEN,sBAAKA,UAAS,UAAKD,IAAL,6CAAd,SACE,eAAC,KAAD,CAAMM,GAAI,CAACC,SAAS,GAAD,OAAKzJ,EAAL,YAAuB+B,GAAMiE,MAAO5C,EAAMrB,IAA7D,SACE,sBAAKoH,UAAU,oBAAoBO,IAAK9H,EACtC+H,MAAOjB,EAAmBzH,EAA8BD,EACxD4I,OAAQlB,EAAmBzH,EAA+BD,EAC1D6I,IAAKjB,QAIX,uBAAKO,UAAS,UAAKT,EAAmB,uBAAyB,GAAjD,qBAAd,UACE,uBAAKS,UAAU,4BAAf,UACE,uBAAKA,UAAU,oBAAf,UACE,qBAAGA,UAAU,0BAAb,mBAA8CN,KAC9C,uBAAMM,UAAU,yBAAhB,2BAEF,0BACEA,UAAS,sCAAiC1H,EAAa,sCAAwC,GAAtF,WACTsH,KAAK,SACLe,QA9CkB,kBAAMpC,EAASU,GAA0B5C,EAAqB/D,EAAYM,KA2C9F,UAKE,sBAAKoH,UAAU,4BAA4BQ,MAAM,KAAKC,OAAO,KAA7D,SACE,sBAAKG,UAAU,qBAEjB,uBAAMZ,UAAU,kBAAhB,gCAGJ,sBAAKA,UAAU,4BAAf,SACE,uBAAKA,UAAU,kCAAf,UACE,uBAAMa,MAAO,CAACL,MAAM,GAAD,OAAKhJ,KAAKC,MAAMkI,GVrErB,EUqE4C,IAAvC,QACnB,uBAAMK,UAAU,kBAAhB,yBAGJ,qBAAIA,UAAU,mBAAd,SACE,eAAC,KAAD,CAAMK,GAAI,CAACC,SAAS,GAAD,OAAKzJ,EAAL,YAAuB+B,GAAMiE,MAAO5C,EAAMrB,IAA7D,SAAmE6G,MAErE,oBAAGO,UAAU,mBAAb,SAAiCjJ,EAAU6I,EAAKkB,uBAMzCC,sBAAK3B,I,SCxEL4B,OAjCf,SACEC,EACAvH,GAEA,MAAsBwH,mBAAqB,MAA3C,oBAAO9D,EAAP,KAAY+D,EAAZ,KA0BA,OAxBAC,qBAAU,WACR,GAAuB,OAAnBH,EAAOI,SAA4B,OAARjE,EAAc,CAC3C,IAAMkE,EAAW,IAAIC,OAAIN,EAAOI,QAAS,CACvCG,OAAQ,CACNC,IAAK/H,EAAKgI,SAASC,SACnBC,IAAKlI,EAAKgI,SAASG,WAErBC,KAAMpI,EAAKgI,SAASI,OAGhBC,EAAQ,IAAIC,aAChB,2EACA,CACEC,YACE,sJAINX,EAASY,SAASH,GAElBZ,EAAOG,MAER,CAACL,EAAQ7D,EAAK1D,IAEV0D,GCtBH+E,I,MAAoB,IAAIC,QAAK,CACjCC,QAAS1K,EACT2K,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAGbC,GAAoB,IAAIJ,QAAK,CACjCC,QAAS1K,EACT2K,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,MAGnB,SAAShB,GAAIkB,GACX,IAAO3I,EAAyB2I,EAAzB3I,OAAQ4I,EAAiBD,EAAjBC,cACThJ,EAAOI,EAAO,GAAGJ,KACjBiJ,EAAS7I,EAAOsD,KAAI,SAACnD,GAAD,MAAY,CAACyH,SAAUzH,EAAMyH,SAAU9I,GAAIqB,EAAMrB,OACrEqI,EAAS2B,iBAAO,MAEhBxF,EAAM4D,GAAOC,EAAQvH,GA2B3B,OAzBA0H,qBAAU,WACJhE,GACFuF,EAAOE,SAAQ,SAACC,GACC,IAAIC,UAAO,CACxBtB,IAAKqB,EAAMpB,SAASC,SACpBC,IAAKkB,EAAMpB,SAASG,YAInBmB,aACmBxG,IAAlBkG,GAA+BI,EAAMlK,KAAO8J,EACxCF,GACAL,IAELc,MAAM7F,QAGZ,CAACA,EAAKuF,EAAQD,IAEjBtB,qBAAU,WACJhE,GACFA,EAAI8F,QAAQ,CAACxJ,EAAKgI,SAASC,SAAUjI,EAAKgI,SAASG,cAEpD,CAACzE,EAAK1D,IAEF,sBAAKmH,MAAO,CAACJ,OAAQ,QAAS0C,IAAKlC,IAG7BF,sBAAKQ,ICnDpB,SAAS6B,GAAT,GAAwF,IAAjEC,EAAgE,EAAhEA,iBAAkBrG,EAA8C,EAA9CA,aAEjCsG,EAAoB,yBAE1B,EAAgDpC,mBAAS,CACvDqC,WAAW,EACXC,WAAW,EACXC,aAAa,EACbC,YAAY,IAJd,oBAAOC,EAAP,KAAyBC,EAAzB,KAOA,EAAgC1C,oBAAkB,GAAlD,oBAAO2C,EAAP,KAAiBC,EAAjB,KAEMC,EAAiB,kBAAOD,GAAY,SAACE,GAAD,OAAiBA,MAE3D,EAAoC9C,mBAAwBnJ,GAA5D,oBAAOkM,EAAP,KAAmBC,EAAnB,KA8BA,OAZA9C,qBAAU,WACR8C,EAAcnM,GACd+L,GAAY,GACZF,EAAoB,CAClBL,WAAW,EACXC,WAAW,EACXC,aAAa,EACbC,YAAY,MAEb,CAAC1G,IAIF,wBAAMgD,UAAU,kBAAkBlD,OAAO,IAAIqH,OAAO,MAApD,UACE,uBAAMnE,UAAU,0BAAhB,qBACA,wBAAMW,QAASoD,EAAgB/D,UAAU,uBAAuBoE,SAAU,EAAG,cAAY,aAAzF,UACGH,EACD,sBAAKjE,UAAU,wBAAwBQ,MAAM,IAAIC,OAAO,IAAxD,SACE,sBAAKG,UAAU,4BAGnB,sBAAID,QArCiB,SAACT,GACxB,IAAMmE,EAAUnE,EAAIoE,OACpBP,IACIM,EAAQE,UAAUC,SAASlB,KAG/BY,EAAcG,EAAQI,aACtBb,EAAoB,CAClBL,UAAWc,EAAQI,cAAgB1M,EACnCyL,UAAWa,EAAQI,cAAgB1M,EACnC0L,YAAaY,EAAQI,cAAgB1M,EACrC2L,WAAYW,EAAQI,cAAgB1M,IAEtCsL,EAAiBgB,EAAQI,eAwBQzE,UAAS,kDAA6C6D,EAAW,0BAA4B,IAA5H,UACE,qBAAI7D,UAAS,yBAAoB2D,EAAiBJ,UAAYD,EAAoB,IAAMc,SAAU,EAAlG,SAAsGrM,IACtG,qBAAIiI,UAAS,yBAAoB2D,EAAiBH,UAAYF,EAAoB,IAAMc,SAAU,EAAlG,SAAsGrM,IACtG,qBAAIiI,UAAS,yBAAoB2D,EAAiBF,YAAcH,EAAoB,IAAMc,SAAU,EAApG,SAAwGrM,IACxG,qBAAIiI,UAAS,yBAAoB2D,EAAiBD,WAAaJ,EAAoB,IAAMc,SAAU,EAAnG,SAAuGrM,UAMhGgJ,sBAAKqC,ICZLsB,OAjDf,YAAqE,IAAhD1H,EAA+C,EAA/CA,aAAclD,EAAiC,EAAjCA,OAE3BuF,EAAuBsF,uBAAY,SAAC/L,GACxCgM,EAAgBhM,KACf,IAEH,EAA0CsI,wBAA6B1E,GAAvE,oBAAOkG,EAAP,KAAsBmC,EAAtB,KAEMD,EAAkB,SAAChM,GACvBiM,EAAiBjM,IAGnB,EAAwCsI,mBAASpH,GAAjD,oBAAOgL,EAAP,KAAqBC,EAArB,KACM1B,EAAmBsB,uBAAY,SAACK,GACpCD,EdqDsB,SAAC7M,EAAoBsF,GAC7C,OAAQA,GACN,KAAKzF,EACH,OAAOG,EAAK+M,QAAQD,MAAK,SAACE,EAAMC,GAAP,OAAiBA,EAAKzF,MAAQwF,EAAKxF,SAC9D,KAAK3H,EACH,OAAOG,EAAK+M,QAAQD,MAAK,SAACE,EAAMC,GAAP,OAAiBD,EAAKxF,MAAQyF,EAAKzF,SAC9D,KAAK3H,EACH,OAAOG,EAAK+M,QAAQD,MAAK,SAACE,EAAMC,GAAP,OAAiBA,EAAKxF,OAASuF,EAAKvF,UAC/D,QACE,OAAOzH,EAAK+M,Sc9DEG,CAAWtL,EAAQkL,MAClC,CAAClL,IAWJ,OATAsH,qBAAU,WACR2D,EAAgBjL,GAChBuL,OAAOC,SAAS,EAAE,KACjB,CAACxL,IAEJsH,qBAAU,WACRyD,OAAiBrI,KAChB,CAACQ,IAGF,sBAAKgD,UAAU,SAAf,SACE,uBAAKA,UAAU,qCAAf,UACE,2BAASA,UAAU,wBAAnB,UACE,qBAAIA,UAAU,kBAAd,oBACA,qBAAGA,UAAU,gBAAb,UAAgD,IAAlBlG,EAAOqE,OAAe,UAAtB,UAAqCrE,EAAOqE,OAA5C,WAA9B,eAAuGnB,KACvG,eAAC,GAAD,CAAcqG,iBAAkBA,EAAkBrG,aAAcA,IAChE,sBAAKgD,UAAU,iDAAf,SACG8E,EAAaG,QAAQ7H,KAAI,SAACnD,GAAD,OACxB,eAAC,GAAD,CAAqBA,MAAOA,EAAOoF,qBAAsBA,EAAsBC,cAAY,GAAhFrF,EAAMrB,YAIvB,sBAAKoH,UAAU,wBAAf,SACE,0BAASA,UAAU,kBAAnB,SACE,eAAC,GAAD,CAAKlG,OAAQA,EAAQ4I,cAAeA,cCjCjC6C,OAhBf,YAA4E,IAAlDvI,EAAiD,EAAjDA,aACxB,OACE,sBAAKgD,UAAU,SAAf,SACE,uBAAKA,UAAU,qEAAf,UACE,0BAASA,UAAU,oBAAnB,SACE,uBAAKA,UAAU,uCAAf,UACE,oBAAGA,UAAU,iBAAb,yCACA,qBAAGA,UAAU,6BAAb,uEAAqGhD,UAGzG,sBAAKgD,UAAU,gCCqCRwF,OA5Cf,WAEE,IAAMnJ,EAAsBwD,YAAYzB,IAClC7B,EAAYsD,YAAYxB,IAExBE,EAAWuB,cAOjB,OACE,sBAAKE,UAAU,cAAf,SACE,qBAAIA,UAAU,mBAAd,SAEI3D,IAAwBzF,EAAoBuI,KAE1C,uCACE,qBAAIa,UAAU,wBAAd,SACE,gBAAC,KAAD,CAAMA,UAAU,6CAA6CK,GAAIxJ,EAAjE,UACE,sBAAKmJ,UAAU,gDAEf,uBAAMA,UAAU,+BAAhB,SAAgDzD,SAGpD,qBAAIyD,UAAU,mBAAd,SACE,oBAAGA,UAAU,mBAAmByF,KAAK,IAArC,SACE,uBAAMzF,UAAU,kBAAkBW,QArBxB,SAACT,GACzBA,EAAIC,iBACJ5B,ER4EwB,yCAC1B,WAAOA,EAAUC,EAAWC,GAA5B,UAAAC,EAAA,sDACED,EAAIiH,OAAO1N,GThFbtB,aAAaiP,WAAWpP,GSkFtBgI,EAASxC,MACTwC,EAASnD,MAJX,2CAD0B,4DQzDV,6BAKN,qBAAI4E,UAAU,mBAAd,SACE,eAAC,KAAD,CAAMA,UAAU,mBAAmBK,GAAG,SAAtC,SACE,uBAAML,UAAU,kBAAhB,8BCjChB,SAAS4F,GAAT,GAAmE,IAAlDC,EAAiD,EAAjDA,qBACf,OACE,yBAAQ7F,UAAU,SAAlB,SACE,sBAAKA,UAAU,YAAf,SACE,uBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,SACE,eAAC,KAAD,CAAMA,UAAU,8CAA8CK,GAAIxJ,EAAlE,SACE,sBAAKmJ,UAAU,eAAeO,IAAI,eAAeG,IAAI,gBAAgBF,MAAM,KAAKC,OAAO,WAIzFoF,EAAuB,eAAC,GAAD,IAAqB,UAQzC9E,sBAAK6E,ICgCLE,OAlDf,WACE,IAAM9I,EAAe6C,YAAY9B,IAE3BgI,EAAuBlG,YZFQ,SAAC7C,GAAD,OAAsDkB,aAAetE,IAAW,SAACE,GAAD,OAAaA,EAAO0D,QAAO,SAACvD,GAAD,OAAYA,EAAMP,KAAKZ,OAASkE,QYEvIgJ,CAAwBhJ,IAE3DuB,EAAWuB,cAEXmG,EAAkB,SAAC/F,GACvBA,EAAIC,iBACJ,IAAM+F,EAAQhG,EAAIoE,OACd4B,EAAMzB,aACRlG,EAAShF,EAAQ2M,EAAMzB,eAI3B,OACE,uBAAKzE,UAAU,6BAAf,UACE,eAAC,GAAD,CAAQ6F,sBAAoB,IAE5B,wBAAM7F,UAAU,+BAAhB,UACE,qBAAIA,UAAU,kBAAd,oBACA,sBAAKA,UAAU,OAAf,SACE,0BAASA,UAAU,sBAAnB,SACE,qBAAIA,UAAU,6BAAd,SAEI5I,EAAOgG,KAAI,SAAC+I,GAAD,OACT,qBAAmBnG,UAAU,kBAA7B,SACE,oBACEA,UAAS,0CAAqCmG,IAAanJ,EAAe,qBAAuB,IACjGyI,KAAK,IACL9E,QAASsF,EAHX,SAKE,gCAAOE,OANFA,YAee,IAAhCJ,EAAqB5H,OACjB,eAAC,GAAD,CAAiBnB,aAAcA,IAC/B,eAAC,GAAD,CAAYA,aAAcA,EAAclD,OAAQiM,WCzCjDK,GnB4BgB,WAC3B,IAAMC,EAAQhP,EAAe,EAAGD,EAAO+G,OAAS,GAChD,OAAO/G,EAAOiP,GmB9BUC,GAyFXC,OAvFf,WACE,IAAMlK,EAAsBwD,YAAYzB,IAClCG,EAAWuB,cAEX0G,EAAW5D,iBAAgC,MAC3C6D,EAAc7D,iBAAgC,MAuBpD,OAAIvG,IAAwBzF,EAAoBuI,KACvC,eAAC,IAAD,CAAUkB,GAAIxJ,IAIrB,uBAAKmJ,UAAU,8BAAf,UACE,eAAC,GAAD,IAEA,uBAAMA,UAAU,+BAAhB,SACE,uBAAKA,UAAU,kCAAf,UACE,2BAASA,UAAU,QAAnB,UACE,qBAAIA,UAAU,eAAd,qBACA,wBAAMA,UAAU,mBAAmBlD,OAAO,IAAIqH,OAAO,OAAOuC,SAjCjD,SAACxG,GAAqC,IAAD,IACxDA,EAAIC,iBACJ,IAAMwG,EnB2Jc,SAACC,EAAgBC,GACvC,IAAMC,EAAcF,GAASzN,EAAYC,MAAM2N,KAAKH,GAC9CI,EAAgBH,GAAY1N,EAAYE,SAAS0N,KAAKF,GAC5D,SAAIC,IAAeE,GmB9JIC,CAAQ,UAACT,EAASnF,eAAV,aAAC,EAAkB6F,MAAnB,UAA0BT,EAAYpF,eAAtC,aAA0B,EAAqB6F,OACvEP,EAIoB,OAArBH,EAASnF,SAA4C,OAAxBoF,EAAYpF,SAC3C9C,EXsDqB,SAAC,GAAD,IAASzC,EAAT,EAAE8K,MAAcC,EAAhB,EAAgBA,SAAhB,gDACzB,WAAOtI,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,sEACgCD,EAAII,KAAqB7G,EAAgB,CAAC8D,QAAO+K,aADjF,gBACgBpQ,EADhB,EACSyB,KAAOzB,MACdD,EAAUC,GACV8H,EAAS5C,GAAqB/E,EAAoBuI,KAAMrD,IACxDwC,KACAC,EAAStC,GAAgBpF,IAL3B,2CADyB,0DWtDZsQ,CAAY,CACnBP,MAAOJ,EAASnF,QAAQ6F,MACxBL,SAAUJ,EAAYpF,QAAQ6F,SANhCpI,KAAMC,KAfyB,8BA4CzB,UACE,uBAAKiB,UAAU,2CAAf,UACE,wBAAOA,UAAU,kBAAjB,oBACA,wBACEmD,IAAKqD,EACLxG,UAAU,2BACVJ,KAAK,QACL9G,KAAK,QACL,cAAY,QACZsO,YAAY,QACZC,UAAQ,OAGZ,uBAAKrH,UAAU,2CAAf,UACE,wBAAOA,UAAU,kBAAjB,sBACA,wBACEmD,IAAKsD,EACLzG,UAAU,2BACVJ,KAAK,WACL9G,KAAK,WACL,cAAY,WACZsO,YAAY,WACZC,UAAQ,OAGZ,yBACErH,UAAU,oCACVJ,KAAK,SACL,cAAY,SAHd,2BASJ,0BAASI,UAAU,gDAAnB,SACE,sBAAKA,UAAU,kBAAf,SACE,oBAAGA,UAAU,uBAAuByF,KAAK,IAAI9E,QAtD3B,SAACT,GAC7BA,EAAIC,iBACJ5B,EAAShF,EAAQ6M,KACjB7H,EAAStC,GAAgBpF,KAmDf,SACE,gCAAOuP,oBC9ERkB,OAVf,WACE,OACE,yBAAQtH,UAAU,SAAlB,SACE,eAAC,KAAD,CAAMA,UAAU,oBAAoBK,GAAIxJ,EAAxC,SACE,sBAAKmJ,UAAU,eAAeO,IAAI,eAAeG,IAAI,gBAAgBF,MAAM,KAAKC,OAAO,YCiBhF8G,OArBf,WACE,OACE,uBAAKvH,UAAU,6BAAf,UACE,eAAC,GAAD,CAAQ6F,sBAAoB,IAE5B,uBAAM7F,UAAU,+DAAhB,SACE,sBAAKA,UAAU,sCAAf,SACE,2BAASA,UAAU,6BAAnB,UACE,qBAAIA,UAAU,kBAAd,+BACA,uBAAKA,UAAU,4BAAf,UACE,oBAAGA,UAAU,oBAAb,gCACA,oBAAGA,UAAU,gCAAb,wFAKR,eAAC,GAAD,QCqDSwH,OA7Df,WACE,IAAMrM,EAAiB0E,YAAY5E,IAC7BwM,EAAqC,GAC3CrQ,EAAOgG,KAAI,SAAC1D,GACV,IAAMgO,EAAqBvM,EAAeqC,QAAO,SAACvD,GAAD,OAAWA,EAAMP,KAAKZ,OAASY,KAChF,OAAIgO,EAAmBvJ,OAAS,EACvBsJ,EAAe/N,GAAQgO,EAEzB,QAGT,IAAMnJ,EAAWuB,cAEX6H,EAAqB,SAACzH,GAC1BA,EAAIC,iBACJ,IAAMzG,EAAOwG,EAAI0H,cAAcC,aAAa,aACxCnO,GACF6E,EAAShF,EAAQG,IAEnB6E,EAAStC,GAAgBpF,KAG3B,OAA8B,IAA1BsE,EAAegD,OACV,eAAC,GAAD,IAIP,uBAAK6B,UAAU,OAAf,UACE,eAAC,GAAD,CAAQ6F,sBAAoB,IAC5B,uBAAM7F,UAAU,mCAAhB,SACE,sBAAKA,UAAU,sCAAf,SACE,2BAASA,UAAU,YAAnB,UACE,qBAAIA,UAAU,mBAAd,2BACA,qBAAIA,UAAU,kBAAd,SAEI5H,OAAO0P,QAAQL,GAAgBrK,KAAI,SAAC2K,GAAD,OACjC,sBAAmB/H,UAAU,6BAA7B,UACE,sBAAKA,UAAU,oDAAf,SACE,sBAAKA,UAAU,kBAAf,SACE,oBAAGA,UAAU,uBAAuByF,KAAK,IAAI9E,QAASgH,EAAoB,YAAWI,EAAM,GAA3F,SACE,gCAAOA,EAAM,WAInB,sBAAK/H,UAAU,oBAAf,SAEI+H,EAAM,GAAG3K,KAAI,SAAC5B,GAAD,OAAmB,eAAC,GAAD,CAA6BvB,MAAOuB,EAAe+D,kBAAgB,GAAxD/D,EAAc5C,WAVtDmP,EAAM,gBAoB3B,eAAC,GAAD,Q,SChEOC,GAAa,SAACnL,GAAD,OAA6CA,EAAM5D,EAAUuB,SAASA,SACnFyN,GAAsB,SAACpL,GAAD,OAA2BA,EAAM5D,EAAUuB,SAASiD,aAC1EyK,GAAqB,SAACrL,GAAD,OAA2BA,EAAM5D,EAAUuB,SAASkD,WC2HvEyK,OAjHf,WACE,IAAMC,EAASC,cACTzP,EAAK0P,SAASF,EAAOxP,GAAI,IAEzB2P,EAAoB1I,YAAYoI,IAChCO,EAAc3I,YAAYqI,IAE1B3J,EAAWuB,cAEjB,EAA4BoB,mBAAyB,CACnDuH,QAAS,GACT9I,OAAQ,IAFV,oBAAO+I,EAAP,KAAeC,EAAf,KAKA,EAAwCzH,oBAAS,GAAjD,oBAAO0H,EAAP,KAAqBC,EAArB,KAEOJ,EAAmBC,EAAnBD,QAAS9I,EAAU+I,EAAV/I,OACVmJ,EAAmBL,EAAQtK,OApBT,IAoBkD,IAAXwB,EAEzDoJ,EAAkB,SAAC7I,GACvByI,EAAU,CACRF,UACA9I,OAAQ2I,SAASpI,EAAIoE,OAAO4C,MAAO,OAgCvC,OAfA9F,qBAAU,WACJmH,IACFI,EAAU,CACRF,QAAS,GACT9I,OAAQ,IAEVkJ,GAAgB,GAChBtK,EAAS1D,OAEP2N,IACFK,GAAgB,GAChBtK,EAASxD,SAEV,CAACwD,EAAUiK,EAAaD,IAGzB,wBAAMvI,UAAU,qBAAqBlD,OAAO,IAAIqH,OAAO,OAAOuC,SAtB3C,SAACxG,GACpBA,EAAIC,iBACJ0I,GAAgB,GAChBtK,EhBjBsB,SAAC3F,EAAY8P,GAAb,gDACxB,WAAOnK,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,+EAEyBD,EAAII,KAAJ,UAA2B7G,EAA3B,YAA+CY,GAAM8P,GAF9E,gBAEWxQ,EAFX,EAEWA,KACPqG,EAAS9D,GAAiBvC,IAH9B,gDAKI4G,KAAMC,KAAKzF,GACXiF,EAAS5D,MANb,yDADwB,0DgBiBbqO,CAAWpQ,EAAI8P,KAmBxB,UACE,wBAAO1I,UAAU,6BAA6BiJ,QAAQ,SAAtD,yBACA,uBAAKjJ,UAAU,oCAAf,UACE,wBAAOA,UAAU,qCAAqClH,KAAK,SAASoO,MAAM,IAAItO,GAAG,UAAUgH,KAAK,QAAQsJ,SAAUH,EAAiBI,QAA2B,IAAlBT,EAAO/I,OAAcyJ,SAAUR,IAC3K,wBAAOK,QAAQ,UAAUjJ,UAAU,2CAA2CP,MAAM,UAApF,SACE,sBAAKO,UAAU,mBAAmBQ,MAAM,KAAKC,OAAO,KAApD,SACE,sBAAKG,UAAU,mBAInB,wBAAOZ,UAAU,qCAAqClH,KAAK,SAASoO,MAAM,IAAItO,GAAG,UAAUgH,KAAK,QAAQsJ,SAAUH,EAAiBI,QAA2B,IAAlBT,EAAO/I,OAAcyJ,SAAUR,IAC3K,wBAAOK,QAAQ,UAAUjJ,UAAU,2CAA2CP,MAAM,OAApF,SACE,sBAAKO,UAAU,mBAAmBQ,MAAM,KAAKC,OAAO,KAApD,SACE,sBAAKG,UAAU,mBAInB,wBAAOZ,UAAU,qCAAqClH,KAAK,SAASoO,MAAM,IAAItO,GAAG,UAAUgH,KAAK,QAAQsJ,SAAUH,EAAiBI,QAA2B,IAAlBT,EAAO/I,OAAcyJ,SAAUR,IAC3K,wBAAOK,QAAQ,UAAUjJ,UAAU,2CAA2CP,MAAM,UAApF,SACE,sBAAKO,UAAU,mBAAmBQ,MAAM,KAAKC,OAAO,KAApD,SACE,sBAAKG,UAAU,mBAInB,wBAAOZ,UAAU,qCAAqClH,KAAK,SAASoO,MAAM,IAAItO,GAAG,UAAUgH,KAAK,QAAQsJ,SAAUH,EAAiBI,QAA2B,IAAlBT,EAAO/I,OAAcyJ,SAAUR,IAC3K,wBAAOK,QAAQ,UAAUjJ,UAAU,2CAA2CP,MAAM,QAApF,SACE,sBAAKO,UAAU,mBAAmBQ,MAAM,KAAKC,OAAO,KAApD,SACE,sBAAKG,UAAU,mBAInB,wBAAOZ,UAAU,qCAAqClH,KAAK,SAASoO,MAAM,IAAItO,GAAG,SAASgH,KAAK,QAAQsJ,SAAUH,EAAiBI,QAA2B,IAAlBT,EAAO/I,OAAcyJ,SAAUR,IAC1K,wBAAOK,QAAQ,SAASjJ,UAAU,2CAA2CP,MAAM,WAAnF,SACE,sBAAKO,UAAU,mBAAmBQ,MAAM,KAAKC,OAAO,KAApD,SACE,sBAAKG,UAAU,sBAIrB,2BAAUZ,UAAU,mCAAmCpH,GAAG,SAASE,KAAK,SACtEsO,YAAY,iEACZ8B,SArEuB,SAAChJ,GAC5ByI,EAAU,CACRF,QAASvI,EAAIoE,OAAO4C,MACpBvH,YAmEEuH,MAAOuB,EACPY,UAnGkB,IAoGlBD,SAAUR,IAGZ,uBAAK5I,UAAU,0BAAf,UACE,qBAAGA,UAAU,gBAAb,sDAC2C,uBAAMA,UAAU,gBAAhB,oBAD3C,yCAC8H,oBAAGA,UAAU,uBAAb,2BAD9H,OAGA,yBAAQA,UAAU,sCAAsCJ,KAAK,SAASwJ,SAAUN,GAAoBF,EAApG,2BCxDOU,OApDf,YAA+D,IAAzC9O,EAAwC,EAAxCA,QAEd6B,EAAsBwD,YAAYzB,IAClCmL,EAAgB/O,EAAQ2D,QAAU,GACpC3D,EAAQyK,MAAMzK,EAAQ2D,OANE,GAM8B3D,EAAQ2D,QAAQqL,UACtEhP,EAAQyK,QAAQuE,UACpB,OACE,2BAASxJ,UAAU,4BAAnB,UACE,sBAAIA,UAAU,iBAAd,0BAAgD,uBAAMA,UAAU,kBAAhB,gBAAmCuJ,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAepL,YAClG,qBAAI6B,UAAU,gBAAd,SAEIuJ,EAAcnM,KAAI,SAACsL,GACjB,IAAMe,EAAO,IAAIC,KAAKhB,EAAOe,MACvBE,EAAWF,EAAKG,cAAcC,UAAU,EAAE,IAC1CC,EAAYL,EAAKM,eAAe,UAAW,CAAEC,MAAO,OAASC,KAAM,YAEzE,OACE,sBAAoBjK,UAAU,gBAA9B,UACE,uBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,+CAAf,SACE,sBAAKA,UAAU,+BAA+BO,IAAKmI,EAAO1P,KAAKL,UAAW6H,MAAM,KAAKC,OAAO,KAAKC,IAAI,qBAEvG,uBAAMV,UAAU,qBAAhB,SACG0I,EAAO1P,KAAKF,UAGjB,uBAAKkH,UAAU,gBAAf,UACE,sBAAKA,UAAU,yBAAf,SACE,uBAAKA,UAAU,+BAAf,UACE,uBAAMa,MAAO,CAACL,MAAM,GAAD,OAAKkI,EAAO/I,OzBd3B,EyBciD,IAAlC,QACnB,uBAAMK,UAAU,kBAAhB,yBAGJ,oBAAGA,UAAU,gBAAb,SACG0I,EAAOD,UAEV,uBAAMzI,UAAU,gBAAgB2J,SAAUA,EAA1C,SAAqDG,SAnBhDpB,EAAO9P,SA2BtByD,IAAwBzF,EAAoBuI,KACxC,eAAC,GAAD,IACA,O,oBChDG+K,OARf,WACE,OACE,sBAAKlK,UAAWa,KAAMsJ,OAAtB,SACE,sBAAKnK,UAAU,kBAAf,oCCgLSoK,OA/Jf,WACE,IAAMhC,EAASC,cACTzP,EAAK0P,SAASF,EAAOxP,GAAI,IAEzBqB,EAAQ4F,YAAY9F,IACpBmD,EAAe2C,YAAY7B,IAC3BxD,EAAUqF,YAAYmI,IACtB1P,EAAauH,YAAY5B,GAAsBrF,IAC/CyD,EAAsBwD,YAAYzB,IAElCG,EAAWuB,cAYjB,GARAsB,qBAAU,WAKR,OAJA7C,EnBzBgC,SAAC3F,GAAD,gDAClC,WAAO2F,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,+EAEyBD,EAAIE,IAAJ,UAAuB3G,EAAvB,YAA0CY,IAFnE,gBAEWV,EAFX,EAEWA,KACPqG,EAASxE,GAAa7B,IAH1B,gDAKIqG,EAAStC,GAAgBpF,IAL7B,yDADkC,0DmByBvBwT,CAAqBzR,IAC9B2F,EnBhBmC,SAAC3F,GAAD,gDACrC,WAAO2F,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,sEACuBD,EAAIE,IAAJ,UAAyB3G,EAAzB,YAA4CY,EAA5C,YADvB,gBACSV,EADT,EACSA,KACPqG,EAASnE,GAAgBlC,IAF3B,2CADqC,0DmBgB1BoS,CAAwB1R,IACjC2F,EnBX8B,SAAC3F,GAAD,gDAChC,WAAO2F,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,sEACuBD,EAAIE,IAAJ,UAA0B3G,EAA1B,YAA8CY,IADrE,gBACSV,EADT,EACSA,KACPqG,EAASjE,GAAiBpC,IAF5B,2CADgC,0DmBWrBqS,CAAmB3R,IAC5ByM,OAAOC,SAAS,EAAG,GACZ,WAAQ/G,EAASrE,SACvB,CAACqE,EAAU3F,KAETqB,EACH,OACE,eAAC,GAAD,IAIJ,IAAOuQ,EAAgGvQ,EAAhGuQ,OAAQjS,EAAwF0B,EAAxF1B,UAAWkH,EAA6ExF,EAA7EwF,MAAOE,EAAsE1F,EAAtE0F,OAAQC,EAA8D3F,EAA9D2F,KAAM6K,EAAwDxQ,EAAxDwQ,SAAUjS,EAA8CyB,EAA9CzB,UAAWkH,EAAmCzF,EAAnCyF,MAAOgL,EAA4BzQ,EAA5ByQ,MAAOhS,EAAqBuB,EAArBvB,KAAMiS,EAAe1Q,EAAf0Q,YACjFhS,EAA0BD,EAA1BC,UAAWE,EAAeH,EAAfG,MAAOC,EAAQJ,EAARI,KAEzB,OACE,uBAAKkH,UAAU,OAAf,UACE,eAAC,GAAD,CAAQ6F,sBAAoB,IAE5B,wBAAM7F,UAAU,kCAAhB,UACE,2BAASA,UAAU,WAAnB,UACE,sBAAKA,UAAU,wCAAf,SACE,sBAAKA,UAAU,oBAAf,SAEIwK,EAAOvF,MAAM,EA1CA,GA0CyB7H,KAAI,SAACwN,GAAD,OACxC,sBAAiB5K,UAAU,0BAA3B,SACE,sBAAKA,UAAU,kBAAkBO,IAAKqK,EAAOlK,IAAI,cADzCkK,UAOlB,sBAAK5K,UAAU,gCAAf,SACE,uBAAKA,UAAU,oBAAf,UAEIzH,EAEE,sBAAKyH,UAAU,iBAAf,SACE,8CAEA,GAEN,uBAAKA,UAAU,yBAAf,UACE,qBAAIA,UAAU,iBAAd,SAAgCP,IAChC,0BACEO,UAAS,oCAA+B1H,EAAa,oCAAsC,GAAlF,WACTsH,KAAK,SACLe,QAnDY,kBAAMpC,EAASU,GAA0B5C,EAAqB/D,EAAYM,KAgDxF,UAKE,sBAAKoH,UAAU,0BAA0BQ,MAAM,KAAKC,OAAO,KAA3D,SACE,sBAAKG,UAAU,qBAEjB,uBAAMZ,UAAU,kBAAhB,gCAGJ,uBAAKA,UAAU,0BAAf,UACE,uBAAKA,UAAU,gCAAf,UACE,uBAAMa,MAAO,CAACL,MAAM,GAAD,OAAKhJ,KAAKC,MAAMkI,G3BpE3B,E2BoEkD,IAAvC,QACnB,uBAAMK,UAAU,kBAAhB,uBAEF,uBAAMA,UAAU,uCAAhB,SAAwDxI,KAAKC,MAAMkI,QAErE,sBAAIK,UAAU,qBAAd,UACE,qBAAIA,UAAU,8CAAd,SACGjJ,EAAU6I,EAAKkB,iBAElB,qBAAId,UAAU,gDAAd,SACgB,IAAbyK,EAAiB,YAAjB,UAAkCA,EAAlC,eAEH,sBAAIzK,UAAU,8CAAd,iBACOxH,EADP,gBAIF,uBAAKwH,UAAU,kBAAf,UACE,qBAAGA,UAAU,wBAAb,mBAA4CN,KAC5C,uBAAMM,UAAU,uBAAhB,0BAEF,uBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,yBAAd,2BACA,qBAAIA,UAAU,wBAAd,SACG0K,EAAMtN,KAAI,SAACC,GAAD,OACT,qBAAe2C,UAAU,wBAAzB,SACG3C,GADMA,WAMf,uBAAK2C,UAAU,iBAAf,UACE,qBAAIA,UAAU,uBAAd,2BACA,uBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,8EAAf,SACE,sBAAKA,UAAU,gCAAgCO,IAAK5H,EAAW6H,MAAM,KAAKC,OAAO,KAAKC,IAAI,kBAE5F,uBAAMV,UAAU,sBAAhB,SACGlH,IAGDD,EAEE,uBAAMmH,UAAU,wBAAhB,iBAGE,MAGR,sBAAKA,UAAU,wBAAf,SACE,oBAAGA,UAAU,iBAAb,SACG2K,SAKLnQ,EACI,eAAC,GAAD,CAAaA,QAASA,IACtB,QAIV,0BAASwF,UAAU,oBAAnB,SAEI9C,EACI,eAAC,GAAD,CAAKpD,OAAM,CAAGG,GAAH,oBAAaiD,IAAewF,cAAe9J,IACrD,QAIX,sBAAKoH,UAAU,YAAf,SACE,2BAASA,UAAU,qBAAnB,UACE,qBAAIA,UAAU,qBAAd,+CACA,sBAAKA,UAAU,iCAAf,SAEI9C,EACIA,EAAaE,KAAI,SAACyN,GAAD,OAAiB,eAAC,GAAD,CAA2B5Q,MAAO4Q,EAAarL,kBAAgB,GAApDqL,EAAYjS,OACzD,iBCzJLkS,OAhBf,WACE,OACE,uBAAK9K,UAAU,6BAAf,UAEE,uBAAMA,UAAU,yCAAhB,SACE,sBAAKA,UAAU,sCAAf,SACE,0BAASA,UAAU,6BAAnB,SACE,qBAAIa,MAAO,CAACkK,UAAW,UAAvB,sCAIN,eAAC,GAAD,QCeSC,OAlBf,SAAsBvI,GACpB,IAAOwI,EAAuBxI,EAAvBwI,MAAOC,EAAgBzI,EAAhByI,KAAMC,EAAU1I,EAAV0I,OAEd9O,EAAsBwD,YAAYzB,IAExC,OACE,eAAC,IAAD,CACE6M,MAAOA,EACPC,KAAMA,EACNC,OAAQ,kBACN9O,IAAwBzF,EAAoBuI,KACxCgM,IACA,eAAC,IAAD,CAAU9K,GAAIxJ,QC8BXuU,OArCf,WACE,IAAM/O,EAAsBwD,YAAYzB,IAClCnB,EAAe4C,YAAY/B,IAEjC,O9BiF2B,SAACzB,GAAD,OAC3BA,IAAwBzF,EAAoB0F,Q8BlFxC+O,CAAchP,KAAyBY,EAEvC,eAAC,GAAD,IAKF,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOiO,KAAMrU,EAAeoU,OAAK,EAAjC,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOC,KAAMrU,EAAgBoU,OAAK,EAAlC,SACE,eAAC,GAAD,MAEF,eAAC,GAAD,CACEA,OAAK,EACLC,KAAMrU,EACNsU,OAAQ,kBAAK,eAAC,GAAD,OAGf,eAAC,IAAD,CAAOD,KAAI,UAAKrU,EAAL,QAAX,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,CAAOqU,KAAMrU,EAAb,SACE,eAAC,GAAD,MAEF,eAAC,IAAD,UACE,eAAC,GAAD,U,QC1COyU,GAFQC,eCGVC,GACb,SAACC,GAAD,OACE,SAACtG,GAAD,OACE,SAACrI,GAKC,OAHIA,EAAO8C,OAAS9I,EAAWoF,iBAC7BoP,GAAe/N,KAAKT,EAAOnD,QAAQwC,KAE9BgJ,EAAKrI,MCGZ2B,I,MnCJmB,SAACiN,GACxB,IAAMjN,EAAMkN,IAAMC,OAAO,CACvBC,QAXgB,2CAYhBC,QAXoB,MAwCtB,OA1BArN,EAAIsN,aAAaC,SAASC,KACxB,SAACD,GAAD,OAA6BA,KAE7B,SAACE,GACC,IAAOF,EAAYE,EAAZF,SAEP,OAAY,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU9M,UAAW5I,EAAS6V,aACzBT,IAGFU,QAAQC,OAAOH,MAI1BzN,EAAIsN,aAAaO,QAAQL,KACvB,SAACM,GACC,IAAM9V,EC9BY,WACtB,IAAMA,EAAQC,aAAa8V,QAAQjW,GACnC,cAAOE,QAAP,IAAOA,IAAS,GD4BEgW,GAMd,OAJIhW,IACF8V,EAAOG,QAAQ,WAAajW,GAGvB8V,KAIJ9N,EmC5BGkO,EACV,kBAAMC,GAAMrO,SAAS5C,GAAqB/E,EAAoBmG,aAG1D6P,GAAQC,YAAe,CAC3BC,QAASlP,GACTmP,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,MAAO,CACLC,cAAezO,MAEhB0O,OAAO3B,OAGdoB,GAAMrO,SzB2CyB,yCAC7B,WAAOA,EAAUC,EAAWC,GAA5B,UAAAC,EAAA,sEACQD,EAAIE,IAAI3G,GACXoV,MAAK,SAACpB,GACDA,EAAS9T,MACXqG,EAAS5C,GAAqB/E,EAAoBuI,KAAM6M,EAAS9T,KAAK4D,WAJ9E,2CAD6B,2DyB1C/B8Q,GAAMrO,SzBzByB,yCAC7B,WAAOA,EAAUC,EAAWC,GAA5B,kBAAAC,EAAA,sEACuBD,EAAIE,IAAkB3G,GAD7C,gBACSE,EADT,EACSA,KACPqG,EAAS3E,GAAU1B,IAFrB,2CAD6B,2DyB0B/B0U,GAAMrO,SAASD,MAEf+O,IAASlC,OACP,eAAC,IAAMmC,WAAP,UACE,eAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,gBAAC,IAAD,CAAeW,QAASjC,GAAxB,UACE,eAAC,KAAD,IACA,eAAC,GAAD,WAINkC,SAASC,eAAe,W","file":"static/js/main.747daf7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__1M8gw\",\"load8\":\"styles_load8__3K2O9\"};","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\n enum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nexport const createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        return onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n","const AUTH_TOKEN_KEY_NAME = 'six-cities-auth-token';\n\nexport type Token = string;\n\nexport const getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nexport const saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nexport const dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n","import { OffersType, ReviewsType } from '../types/types';\n\nexport const AppRoute = {\n  ROOT: '/',\n  LOGIN: '/login',\n  OFFER: '/offer',\n  FAVORITE: '/favorites',\n  NOT_FOUND: '/not-found',\n} as const;\n\nexport enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\ntype RoomTypesType = {\n  [key: string]: string;\n}\n\nexport const RoomTypes:RoomTypesType = {\n  APARTMENT: 'Apartment',\n  ROOM: 'Private room',\n  HOUSE: 'House',\n  HOTEL: 'Hotel',\n};\n\nexport const MAX_RATING = 5;\n\nexport const cities = ['Paris', 'Cologne', 'Brussels', 'Amsterdam', 'Hamburg', 'Dusseldorf'];\n\nconst getRandomIndex = (min: number, max: number): number => {\n  if (min < 0 || max < 0) {\n    return 0;\n  } else if (min > max) {\n    [min, max] = [max, min];\n  }\n  return Math.round(Math.random() * (max - min) + min);\n};\n\nexport const getRandomCity = (): string => {\n  const index = getRandomIndex(0, cities.length - 1);\n  return cities[index];\n};\n\nexport const getRandomRoomType = (): string => {\n  const keys = Object.keys(RoomTypes);\n  const index = getRandomIndex(0, keys.length - 1);\n  return keys[index];\n};\n\nexport const Markers = {\n  DEFAULT: './img/pin.svg',\n  CURRENT: './img/pin-active.svg',\n};\n\nexport const Screen = {\n  MAIN: 'cities',\n  FAVORITE: 'favorites',\n  PROPERTY:'near-places',\n};\n\nexport const BasicCardImageSize = {\n  WIDTH: 260,\n  HEIGHT: 200,\n};\n\nexport const FavoriteCardImageSize = {\n  WIDTH: 150,\n  HEIGHT: 110,\n};\n\nexport const SortMode = {\n  POPULAR: 'Popular',\n  PRICE_UP: 'Price: low to high',\n  PRICE_DOWN: 'Price: high to low',\n  TOP_RATED: 'Top rated first',\n};\n\nexport const sortOffers = (data: OffersType[], filter: string | null): OffersType[] => {\n  switch (filter) {\n    case SortMode.PRICE_DOWN:\n      return data.slice().sort((prev, next) => (next.price - prev.price));\n    case SortMode.PRICE_UP:\n      return data.slice().sort((prev, next) => (prev.price - next.price));\n    case SortMode.TOP_RATED:\n      return data.slice().sort((prev, next) => (next.rating - prev.rating));\n    default:\n      return data.slice();\n  }\n};\n\nexport const APIRoute = {\n  OFFERS: '/hotels',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n  REVIEWS: '/comments',\n  FAVORITE:  '/favorite',\n};\n\nexport const isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\n\nexport const adaptToClient = (data: OffersType): OffersType => {\n  const adaptedItem = Object.assign(\n    {},\n    data,\n    {\n      isFavorite: data['is_favorite'],\n      isPremium: data['is_premium'],\n      maxAdults: data['max_adults'],\n      previewImage: data['preview_image'],\n      host: {\n        avatarUrl: data.host['avatar_url'],\n        id: data.host.id,\n        isPro: data.host['is_pro'],\n        name: data.host.name,\n      },\n    },\n  );\n  delete adaptedItem['is_favorite'];\n  delete adaptedItem['is_premium'];\n  delete adaptedItem['max_adults'];\n  delete adaptedItem['preview_image'];\n  delete adaptedItem.host['avatar_url'];\n  delete adaptedItem.host['is_pro'];\n  return adaptedItem;\n};\n\nexport const adaptReviewsToClient = (data: ReviewsType): ReviewsType => {\n  const adaptedItem = Object.assign(\n    {},\n    data,\n    {\n      user: {\n        avatarUrl: data.user['avatar_url'],\n        id: data.user.id,\n        isPro: data.user['is_pro'],\n        name: data.user.name,\n      },\n    },\n  );\n  delete adaptedItem.user['avatar_url'];\n  delete adaptedItem.user['is_pro'];\n  return adaptedItem;\n};\n\nexport enum ActionType {\n  GetCityAction = 'MAIN/GET_CITY',\n  GetOffersAction = 'MAIN/GET_OFFERS',\n  GetOfferByIDAction = 'OFFERS/GET_OFFER',\n  ClearOfferByIDAction = 'OFFERS/CLEAR_OFFER',\n  GetNearByOffers = 'OFFERS/GET_NEARBY',\n  GetReviews = 'OFFERS/GET_REVIEWS',\n  PostReview = 'OFFERS/POST_REVIEW',\n  PostError = 'OFFERS/POST_REVIEW_ERROR',\n  ClearPostReviewStatus = 'OFFERS/CLEAR_POST_REVIEW_STATUS',\n  ClearPostReviewError = 'OFFERS/CLEAR_POST_REVIEW_ERROR',\n  GetFavoriteOffers = 'FAVORITE/GET_FAVORITE_OFFERS',\n  ClearFavoriteOffers = 'FAVORITE/CLEAR_FAVORITE_OFFERS',\n  AddToFavoriteOffers = 'FAVORITE/ADD_TO_FAVORITE',\n  RemoveFromFavoriteOffers = 'FAVORITE/REMOVE_FROM_FAVORITE',\n  RequireAuthorization = 'USER/REQUIRE_AUTHORIZATION',\n  RequireLogout = 'USER/REQUIRE_LOGOUT',\n  RedirectToRoute = 'USER/REDIRECT',\n}\n\nexport const TypeOfFavoriteAction = {\n  ADDITION_TO_FAVOTITE: 1,\n  REMOVAL_FROM_FAVOTITE:  0,\n};\n\nconst LoginRegexp = {\n  EMAIL: /[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/,\n  PASSWORD: /^(?=.*\\d)(?=.*[a-zA-Z])/,\n};\n\nexport const validate = (login?: string, password?: string): boolean => {\n  const validLoogin = login && LoginRegexp.EMAIL.test(login);\n  const validPassword = password && LoginRegexp.PASSWORD.test(password);\n  if (validLoogin && validPassword) {\n    return true;\n  }\n  return false;\n};\n\nexport const FailMessages = {\n  POST: 'Unable to send the message. Check your internet connection',\n  ADD_TO_FAVORITES: 'Unable to add to favorites. Check your internet connection',\n  REMOVE_FROM_FAVORITES: 'Unable to remove from favorites. Check your internet connection',\n};\n","import { combineReducers } from 'redux';\nimport { userProcess } from './user/user-reducer';\nimport { offersData } from './offers/offers-reducer';\nimport { reviewsData } from './reviews/reviews-reducer';\n\nexport enum NameSpace {\noffers = 'OFFERS',\nreviews = 'REVIEWS',\nuser = 'USER',\n}\n\nexport const rootReducer = combineReducers({\n  [NameSpace.user]: userProcess,\n  [NameSpace.offers]: offersData,\n  [NameSpace.reviews]: reviewsData,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { createAction } from '@reduxjs/toolkit';\nimport { OffersType, ReviewsType } from '../types/types';\nimport { ActionType, AuthorizationStatus } from '../const/const';\n\nexport const getCity = createAction(\n  ActionType.GetCityAction,\n  (city: string) => ({\n    payload: {\n      city,\n    },\n  }),\n);\n\nexport const getOffers = createAction(\n  ActionType.GetOffersAction,\n  (offers: OffersType[]) => ({\n    payload: {\n      offers,\n    },\n  }),\n);\n\nexport const getOfferByID = createAction(\n  ActionType.GetOfferByIDAction,\n  (offer: OffersType) => ({\n    payload: {\n      offer,\n    },\n  }),\n);\n\nexport const clearOfferByID = createAction(ActionType.ClearOfferByIDAction);\n\nexport const getNearByOffers = createAction(\n  ActionType.GetNearByOffers,\n  (offers: OffersType[]) => ({\n    payload: {\n      offers,\n    },\n  }),\n);\n\nexport const getReviewsAction = createAction(\n  ActionType.GetReviews,\n  (reviews: ReviewsType[]) => ({\n    payload: {\n      reviews,\n    },\n  }),\n);\n\nexport const postReviewAction = createAction(\n  ActionType.PostReview,\n  (reviews: ReviewsType[]) => ({\n    payload: {\n      reviews,\n    },\n  }),\n);\n\nexport const postReviewError = createAction(ActionType.PostError);\n\nexport const clearPostReviewStatus = createAction(ActionType.ClearPostReviewStatus);\n\nexport const clearPostReviewError = createAction(ActionType.ClearPostReviewError);\n\nexport const getFavoriteOffers = createAction(\n  ActionType.GetFavoriteOffers,\n  (favoriteOffers: OffersType[]) => ({\n    payload: {\n      favoriteOffers,\n    },\n  }),\n);\n\nexport const clearFavoriteOffers = createAction(ActionType.ClearFavoriteOffers);\n\nexport const addToFavoriteOffers = createAction(\n  ActionType.AddToFavoriteOffers,\n  (favoriteOffer: OffersType) => ({\n    payload: {\n      favoriteOffer,\n    },\n  }),\n);\n\nexport const removeFromFavoriteOffers = createAction(\n  ActionType.RemoveFromFavoriteOffers,\n  (favoriteOffer: OffersType) => ({\n    payload: {\n      favoriteOffer,\n    },\n  }),\n);\n\nexport const requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus, email?: string) => ({\n    payload: {\n      authStatus,\n      email,\n    },\n  }),\n);\n\nexport const requireLogout = createAction(ActionType.RequireLogout);\n\nexport const redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: string) => ({\n    payload: {\n      url,\n    },\n  }),\n);\n","import { UserState } from '../../../types/types';\nimport { AuthorizationStatus } from '../../../const/const';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { requireAuthorization, requireLogout } from '../../action';\n\nexport const initialState: UserState = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  userEmail: undefined,\n};\n\nexport const userProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload.authStatus;\n      state.userEmail = action.payload.email;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n      state.userEmail = initialState.userEmail;\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { OffersState } from '../../../types/types';\nimport { adaptToClient } from '../../../const/const';\nimport { addToFavoriteOffers, clearFavoriteOffers, clearOfferByID, getCity, getFavoriteOffers, getNearByOffers, getOfferByID, getOffers, removeFromFavoriteOffers } from '../../action';\n\nexport const initialState: OffersState = {\n  selectedCity: 'Paris',\n  offers: [],\n  isDataLoaded: false,\n  offer: undefined,\n  nearbyOffers: undefined,\n  favoriteOffers: [],\n};\n\nexport const offersData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(getCity, (state, action) => {\n      state.selectedCity = action.payload.city;\n    })\n    .addCase(getOffers, (state, action) => {\n      state.offers = action.payload.offers.map((item)  => adaptToClient(item));\n      state.isDataLoaded = true;\n    })\n    .addCase(getOfferByID, (state, action) => {\n      state.offer = adaptToClient(action.payload.offer);\n    })\n    .addCase(clearOfferByID, (state) => {\n      state.offer = initialState.offer;\n      state.nearbyOffers = initialState.nearbyOffers;\n    })\n    .addCase(getNearByOffers, (state, action) => {\n      state.nearbyOffers = action.payload.offers?.map((item)  => adaptToClient(item));\n    })\n    .addCase(getFavoriteOffers, (state, action) => {\n      state.favoriteOffers = action.payload.favoriteOffers?.map((item)  => adaptToClient(item));\n    })\n    .addCase(clearFavoriteOffers, (state) => {\n      state.favoriteOffers = initialState.favoriteOffers;\n    })\n    .addCase(addToFavoriteOffers, (state, action) => {\n      const newFavoriteOffer = adaptToClient(action.payload.favoriteOffer);\n      state.favoriteOffers.push(newFavoriteOffer);\n    })\n    .addCase(removeFromFavoriteOffers, (state, action) => {\n      state.favoriteOffers = state.favoriteOffers.filter((item) => item.id !== action.payload.favoriteOffer.id);\n    });\n});\n","import { createReducer } from '@reduxjs/toolkit';\nimport { ReviewsState } from '../../../types/types';\nimport { adaptReviewsToClient } from '../../../const/const';\nimport { clearPostReviewStatus, getReviewsAction, postReviewAction, postReviewError, clearPostReviewError } from '../../action';\n\nexport const initialState: ReviewsState = {\n  reviews: undefined,\n  postSuccess: false,\n  postError: false,\n};\n\nexport const reviewsData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(getReviewsAction, (state, action) => {\n      state.reviews = action.payload.reviews?.map((item)  => adaptReviewsToClient(item));\n    })\n    .addCase(postReviewAction, (state, action) => {\n      state.reviews = action.payload.reviews?.map((item)  => adaptReviewsToClient(item));\n      state.postSuccess = true;\n    })\n    .addCase(postReviewError, (state) => {\n      state.postError = true;\n    })\n    .addCase(clearPostReviewStatus, (state) => {\n      state.postSuccess = initialState.postSuccess;\n    })\n    .addCase(clearPostReviewError, (state) => {\n      state.postError = initialState.postError;\n    });\n});\n","import { NameSpace } from '../root-reducer';\nimport { State, OffersType, ReselectType } from '../../../types/types';\nimport { createSelector } from 'reselect';\n\nexport const getOffers = (state: State): OffersType[] => state[NameSpace.offers].offers;\nexport const getLoadedDataStatus = (state: State): boolean => state[NameSpace.offers].isDataLoaded;\nexport const getSelectedCity = (state: State): string => state[NameSpace.offers].selectedCity;\nexport const getOfferByID = (state: State): OffersType |  undefined => state[NameSpace.offers].offer;\nexport const getNearbyOffers = (state: State): OffersType[] |  undefined => state[NameSpace.offers].nearbyOffers;\nexport const getFavoriteOffers = (state: State): OffersType[] => state[NameSpace.offers].favoriteOffers;\nexport const getFavoriteOffersMemo = (id: number): ReselectType<boolean> => createSelector(getFavoriteOffers, (favoriteOffers) => favoriteOffers?.filter((item) => item.id === id).length > 0);\nexport const getOffersInSelectedCity = (selectedCity: string): ReselectType<OffersType[]> => createSelector(getOffers, (offers) => (offers.filter((offer) =>  offer.city.name === selectedCity)));\n","import { NameSpace } from '../root-reducer';\nimport { State } from '../../../types/types';\nimport { AuthorizationStatus } from '../../../const/const';\n\nexport const getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.user].authorizationStatus;\nexport const getUserEmail = (state: State): string | undefined => state[NameSpace.user].userEmail;\n","import { OffersType, ThunkActionResult, AuthData, ReviewsType, PostReviewType } from '../types/types';\nimport { getFavoriteOffers, getNearByOffers, getOfferByID, getOffers, getReviewsAction, postReviewAction, redirectToRoute, removeFromFavoriteOffers, requireAuthorization, requireLogout, clearFavoriteOffers, addToFavoriteOffers, postReviewError } from './action';\nimport { saveToken, dropToken, Token } from '../services/token';\nimport { APIRoute, AuthorizationStatus, AppRoute, TypeOfFavoriteAction, FailMessages } from '../const/const';\nimport { toast } from 'react-toastify';\n\nexport const fetchDataAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<OffersType[]>(APIRoute.OFFERS);\n    dispatch(getOffers(data));\n  };\n\nexport const fetchOfferByIDAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.get<OffersType>(`${APIRoute.OFFERS}/${id}`);\n      dispatch(getOfferByID(data));\n    } catch {\n      dispatch(redirectToRoute(AppRoute.NOT_FOUND));\n    }\n  };\n\nexport const fetchNearByOffersAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<OffersType[]>(`${APIRoute.OFFERS}/${id}/nearby`);\n    dispatch(getNearByOffers(data));\n  };\n\nexport const fetchReviewsAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<ReviewsType[]>(`${APIRoute.REVIEWS}/${id}`);\n    dispatch(getReviewsAction(data));\n  };\n\nexport const postReview = (id: number, review: PostReviewType): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.post<ReviewsType[]>(`${APIRoute.REVIEWS}/${id}`, review);\n      dispatch(postReviewAction(data));\n    } catch {\n      toast.info(FailMessages.POST);\n      dispatch(postReviewError());\n    }\n  };\n\nexport const fetchFavoriteOffers = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const {data} = await api.get<OffersType[]>(APIRoute.FAVORITE);\n    if (data) {\n      dispatch(getFavoriteOffers(data));\n    }\n  };\n\nexport const addToFavorites = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.post<OffersType>(`${APIRoute.FAVORITE}/${id}/${TypeOfFavoriteAction.ADDITION_TO_FAVOTITE}`);\n      dispatch(addToFavoriteOffers(data));\n    } catch (error) {\n      toast.info(FailMessages.ADD_TO_FAVORITES);\n    }\n  };\n\nexport const removeFromFavorites = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const {data} = await api.post<OffersType>(`${APIRoute.FAVORITE}/${id}/${TypeOfFavoriteAction.REMOVAL_FROM_FAVOTITE}`);\n      dispatch(removeFromFavoriteOffers(data));\n    } catch (error) {\n      toast.info(FailMessages.REMOVE_FROM_FAVORITES);\n    }\n  };\n\nexport const checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    await api.get(APIRoute.LOGIN)\n      .then((response) => {\n        if (response.data) {\n          dispatch(requireAuthorization(AuthorizationStatus.Auth, response.data.email));\n        }\n      });\n  };\n\nexport const loginAction = ({login: email, password}: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const {data: {token}} = await api.post<{token: Token}>(APIRoute.LOGIN, {email, password});\n    saveToken(token);\n    dispatch(requireAuthorization(AuthorizationStatus.Auth, email));\n    fetchFavoriteOffers();\n    dispatch(redirectToRoute(AppRoute.ROOT));\n  };\n\nexport const logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.LOGOUT);\n    dropToken();\n    dispatch(requireLogout());\n    dispatch(clearFavoriteOffers());\n  };\n","import { ThunkActionResult } from '../types/types';\nimport { redirectToRoute } from '../store/action';\nimport { removeFromFavorites, addToFavorites } from '../store/api-actions';\nimport { AuthorizationStatus, AppRoute } from '../const/const';\n\nexport const handleFavoriteClickAction = (status: AuthorizationStatus, isFavorite: boolean, id: number): ThunkActionResult =>\n  async (dispatch, _getState): Promise<void> => {\n    if (status !== AuthorizationStatus.Auth) {\n      dispatch(redirectToRoute(AppRoute.LOGIN));\n    } else if (isFavorite) {\n      dispatch(removeFromFavorites(id));\n    } else {\n      dispatch(addToFavorites(id));\n    }\n  };\n","import { memo, MouseEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, RoomTypes, MAX_RATING, Screen, BasicCardImageSize, FavoriteCardImageSize } from '../../const/const';\nimport { getFavoriteOffersMemo } from '../../store/reducers/offers/offers-selectors';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\nimport { handleFavoriteClickAction } from '../../utils/utils';\nimport { OffersType } from '../../types/types';\n\ntype CardProps = {\n  offer: OffersType;\n  listItemHoverHandler?: (id?: number) => void;\n  isMainScreen?: boolean;\n  isFavoriteScreen?: boolean;\n  isPropertyScreen?: boolean;\n}\n\nfunction Card({offer, listItemHoverHandler, isMainScreen, isFavoriteScreen, isPropertyScreen}:CardProps):JSX.Element {\n  const {isPremium, previewImage, title, price, rating, type, id} = offer;\n  const isFavorite = useSelector(getFavoriteOffersMemo(id));\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const handleHover = (evt: MouseEvent<HTMLElement>) => {\n    if (!isMainScreen) {\n      return;\n    }\n    evt.preventDefault();\n    if (listItemHoverHandler) {\n      listItemHoverHandler(offer.id);\n    }\n  };\n\n  const handleBlur = () => {\n    if (listItemHoverHandler) {\n      listItemHoverHandler(undefined);\n    }\n  };\n\n  const dispatch = useDispatch();\n\n  const handleFavoriteClick = () => dispatch(handleFavoriteClickAction(authorizationStatus, isFavorite, id));\n\n\n  const getScreenClass = () => {\n    switch(true) {\n      case isMainScreen:\n        return Screen.MAIN;\n      case isFavoriteScreen:\n        return Screen.FAVORITE;\n      case isPropertyScreen:\n        return Screen.PROPERTY;\n      default:\n        return Screen.MAIN;\n    }\n  };\n\n  return (\n    <article className={`${isMainScreen ? 'cities__place-card' : `${getScreenClass()}__card`} place-card`}\n      onMouseOver={handleHover} onMouseOut={handleBlur}\n    >\n      {\n        isPremium\n          ?\n          <div className=\"place-card__mark\">\n            <span>Premium</span>\n          </div>\n          : ''\n      }\n      <div className={`${getScreenClass()}__image-wrapper place-card__image-wrapper`}>\n        <Link to={{pathname: `${AppRoute.OFFER}/${id}`, state: offer.id}}>\n          <img className=\"place-card__image\" src={previewImage}\n            width={isFavoriteScreen ? FavoriteCardImageSize.WIDTH : BasicCardImageSize.WIDTH}\n            height={isFavoriteScreen ? FavoriteCardImageSize.HEIGHT : BasicCardImageSize.HEIGHT}\n            alt={title}\n          />\n        </Link>\n      </div>\n      <div className={`${isFavoriteScreen ? 'favorites__card-info' : ''} place-card__info`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={`place-card__bookmark-button ${isFavorite ? 'place-card__bookmark-button--active' : ''} button`}\n            type=\"button\"\n            onClick={handleFavoriteClick}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">In bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{width: `${Math.round(rating) / MAX_RATING * 100}%`}}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={{pathname: `${AppRoute.OFFER}/${id}`, state: offer.id}}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{RoomTypes[type.toUpperCase()]}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default memo(Card);\n","import { useEffect, useState, MutableRefObject } from 'react';\nimport { Map, TileLayer } from 'leaflet';\nimport { CityType } from '../types/types';\n\nfunction useMap(\n  mapRef: MutableRefObject<HTMLElement | null>,\n  city: CityType,\n): Map | null {\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current !== null && map === null) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: city.location.latitude,\n          lng: city.location.longitude,\n        },\n        zoom: city.location.zoom,\n      });\n\n      const layer = new TileLayer(\n        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n        {\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        },\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n    }\n  }, [mapRef, map, city]);\n\n  return map;\n}\n\nexport default useMap;\n","import { useRef, useEffect, memo } from 'react';\nimport { Icon, Marker } from 'leaflet';\nimport useMap from '../../hooks/useMap';\nimport { OffersType } from '../../types/types';\nimport { Markers } from '../../const/const';\nimport 'leaflet/dist/leaflet.css';\n\ntype MapProps = {\n  offers: OffersType[];\n  selectedPoint?: number;\n};\n\nconst defaultCustomIcon = new Icon({\n  iconUrl: Markers.DEFAULT,\n  iconSize: [28, 40],\n  iconAnchor: [14, 40],\n});\n\nconst currentCustomIcon = new Icon({\n  iconUrl: Markers.CURRENT,\n  iconSize: [28, 40],\n  iconAnchor: [14, 40],\n});\n\nfunction Map(props: MapProps):JSX.Element {\n  const {offers, selectedPoint} = props;\n  const city = offers[0].city;\n  const points = offers.map((offer) => ({location: offer.location, id: offer.id}));\n  const mapRef = useRef(null);\n\n  const map = useMap(mapRef, city);\n\n  useEffect(() => {\n    if (map) {\n      points.forEach((point) => {\n        const marker = new Marker({\n          lat: point.location.latitude,\n          lng: point.location.longitude,\n        });\n\n        marker\n          .setIcon(\n            selectedPoint !== undefined && point.id === selectedPoint\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          )\n          .addTo(map);\n      });\n    }\n  }, [map, points, selectedPoint]);\n\n  useEffect(() => {\n    if (map) {\n      map.setView([city.location.latitude, city.location.longitude]);\n    }\n  }, [map, city]);\n\n  return <div style={{height: '100%'}} ref={mapRef}></div>;\n}\n\nexport default memo(Map);\n","import { FormEvent, memo, useEffect, useState } from 'react';\nimport { SortMode } from '../../const/const';\n\n\ntype SortVariantsProps = {\n  onSortModeChange: (sort: string | null) => void;\n  selectedCity: string;\n}\n\nfunction SortVariants({onSortModeChange, selectedCity}: SortVariantsProps):JSX.Element {\n\n  const ACTIVE_SORT_CLASS = 'places__option--active';\n\n  const [selectedSortMode, setSelectedSortMode] = useState({\n    isPopular: true,\n    isPriceUp: false,\n    isPriceDown: false,\n    isTopRated: false,\n  });\n\n  const [openList, setOpenList] = useState<boolean>(false);\n\n  const handleSortOpen = () => (setOpenList((prevState) =>  !prevState));\n\n  const [selectSort, setSelectSort] = useState<string | null>(SortMode.POPULAR);\n\n  const handleSelectSort = (evt: FormEvent) => {\n    const element = evt.target as HTMLInputElement;\n    handleSortOpen();\n    if (element.classList.contains(ACTIVE_SORT_CLASS)) {\n      return;\n    }\n    setSelectSort(element.textContent);\n    setSelectedSortMode({\n      isPopular: element.textContent === SortMode.POPULAR,\n      isPriceUp: element.textContent === SortMode.PRICE_UP,\n      isPriceDown: element.textContent === SortMode.PRICE_DOWN,\n      isTopRated: element.textContent === SortMode.TOP_RATED,\n    });\n    onSortModeChange(element.textContent);\n  };\n\n  useEffect(() => {\n    setSelectSort(SortMode.POPULAR);\n    setOpenList(false);\n    setSelectedSortMode({\n      isPopular: true,\n      isPriceUp: false,\n      isPriceDown: false,\n      isTopRated: false,\n    });\n  }, [selectedCity]);\n\n\n  return (\n    <form className=\"places__sorting\" action=\"/\" method=\"get\">\n      <span className=\"places__sorting-caption\">Sort by</span>\n      <span onClick={handleSortOpen} className=\"places__sorting-type\" tabIndex={0} data-testid=\"selectSort\">\n        {selectSort}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      <ul onClick={handleSelectSort} className={`places__options places__options--custom ${openList ? 'places__options--opened' : ''}`}>\n        <li className={`places__option ${selectedSortMode.isPopular ? ACTIVE_SORT_CLASS : ''}`} tabIndex={0}>{SortMode.POPULAR}</li>\n        <li className={`places__option ${selectedSortMode.isPriceUp ? ACTIVE_SORT_CLASS : ''}`} tabIndex={0}>{SortMode.PRICE_UP}</li>\n        <li className={`places__option ${selectedSortMode.isPriceDown ? ACTIVE_SORT_CLASS : ''}`} tabIndex={0}>{SortMode.PRICE_DOWN}</li>\n        <li className={`places__option ${selectedSortMode.isTopRated ? ACTIVE_SORT_CLASS : ''}`} tabIndex={0}>{SortMode.TOP_RATED}</li>\n      </ul>\n    </form>\n  );\n}\n\nexport default memo(SortVariants);\n","import Card from '../card/card';\nimport { OffersType } from '../../types/types';\nimport Map from '../map/map';\nimport { useCallback, useEffect, useState } from 'react';\nimport SortVariants from '../sort-variants/sort-variants';\nimport { sortOffers } from '../../const/const';\n\ntype OffersProps = {\n  selectedCity:  string;\n  offers: OffersType[];\n}\n\nfunction OffersList({selectedCity, offers}:OffersProps):JSX.Element {\n\n  const listItemHoverHandler = useCallback((id?: number) => {\n    onListItemHover(id);\n  }, []);\n\n  const [selectedPoint, setSelectedPoint] = useState<number | undefined>(undefined);\n\n  const onListItemHover = (id?: number) => {\n    setSelectedPoint(id);\n  };\n\n  const [sortedOffers, setSortedOffers] = useState(offers);\n  const onSortModeChange = useCallback((sort: string | null) => {\n    setSortedOffers(sortOffers(offers, sort));\n  }, [offers]);\n\n  useEffect(() => {\n    setSortedOffers(offers);\n    window.scrollTo(0,0);\n  }, [offers]);\n\n  useEffect(() => {\n    setSelectedPoint(undefined);\n  }, [selectedCity]);\n\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container container\">\n        <section className=\"cities__places places\">\n          <h2 className=\"visually-hidden\">Places</h2>\n          <b className=\"places__found\">{offers.length === 1 ? '1 place' : `${offers.length} places`} to stay in {selectedCity}</b>\n          <SortVariants onSortModeChange={onSortModeChange} selectedCity={selectedCity}/>\n          <div className=\"cities__places-list places__list tabs__content\">\n            {sortedOffers.slice().map((offer:OffersType) =>\n              <Card key={offer.id} offer={offer} listItemHoverHandler={listItemHoverHandler} isMainScreen />,\n            )}\n          </div>\n        </section>\n        <div className=\"cities__right-section\">\n          <section className=\"cities__map map\">\n            <Map offers={offers} selectedPoint={selectedPoint} />\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OffersList;\n","type MainScreenEmptyProps = {\n  selectedCity: string;\n}\n\nfunction MainScreenEmpty({selectedCity}: MainScreenEmptyProps):JSX.Element {\n  return (\n    <div className=\"cities\">\n      <div className=\"cities__places-container cities__places-container--empty container\">\n        <section className=\"cities__no-places\">\n          <div className=\"cities__status-wrapper tabs__content\">\n            <b className=\"cities__status\">No places to stay available</b>\n            <p className=\"cities__status-description\">We could not find any property available at the moment in {selectedCity}</p>\n          </div>\n        </section>\n        <div className=\"cities__right-section\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default MainScreenEmpty;\n","import { MouseEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const/const';\nimport { logoutAction } from '../../store/api-actions';\nimport { Link } from 'react-router-dom';\nimport { getAuthorizationStatus, getUserEmail } from '../../store/reducers/user/user-selectors';\n\nfunction UserNavigation(): JSX.Element {\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const userEmail = useSelector(getUserEmail);\n\n  const dispatch = useDispatch();\n\n  const handleLogoutClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    dispatch(logoutAction());\n  };\n\n  return (\n    <nav className=\"header__nav\">\n      <ul className=\"header__nav-list\">\n        {\n          authorizationStatus === AuthorizationStatus.Auth\n            ?\n            <>\n              <li className=\"header__nav-item user\">\n                <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.FAVORITE}>\n                  <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n                  </div>\n                  <span className=\"header__user-name user__name\">{userEmail}</span>\n                </Link>\n              </li>\n              <li className=\"header__nav-item\">\n                <a className=\"header__nav-link\" href=\"/\">\n                  <span className=\"header__signout\" onClick={handleLogoutClick}>Sign out</span>\n                </a>\n              </li>\n            </>\n            :\n            <li className=\"header__nav-item\">\n              <Link className=\"header__nav-link\" to=\"/login\">\n                <span className=\"header__signout\">Sign in</span>\n              </Link>\n            </li>\n        }\n      </ul>\n    </nav>\n  );\n}\n\nexport default UserNavigation;\n","import { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const/const';\nimport UserNavigation from '../user-navigation/user-navigation';\n\ntype HeaderProps = {\n  isWithUserNavigation?: boolean;\n}\n\nfunction Header({isWithUserNavigation}: HeaderProps): JSX.Element {\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to={AppRoute.ROOT}>\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          {\n            isWithUserNavigation ? <UserNavigation /> : ''\n          }\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default memo(Header);\n","import { MouseEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getCity } from '../../store/action';\nimport { cities } from '../../const/const';\nimport OffersList from '../offers-list/offers-list';\nimport MainScreenEmpty from '../main-empty/main-empty';\nimport Header from '../header/header';\nimport { getOffersInSelectedCity, getSelectedCity } from '../../store/reducers/offers/offers-selectors';\n\n\nfunction MainScreen():JSX.Element {\n  const selectedCity = useSelector(getSelectedCity);\n\n  const offersInSelectedCity = useSelector(getOffersInSelectedCity(selectedCity));\n\n  const dispatch = useDispatch();\n\n  const handleCityClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    const input = evt.target as HTMLElement;\n    if (input.textContent) {\n      dispatch(getCity(input.textContent));\n    }\n  };\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header isWithUserNavigation />\n\n      <main className=\"page__main page__main--index\">\n        <h1 className=\"visually-hidden\">Cities</h1>\n        <div className=\"tabs\">\n          <section className=\"locations container\">\n            <ul className=\"locations__list tabs__list\">\n              {\n                cities.map((menuCity) => (\n                  <li key={menuCity} className=\"locations__item\">\n                    <a\n                      className={`locations__item-link tabs__item ${menuCity === selectedCity ? 'tabs__item--active' : ''}`}\n                      href=\"/\"\n                      onClick={handleCityClick}\n                    >\n                      <span>{menuCity}</span>\n                    </a>\n                  </li>\n                ))\n              }\n            </ul>\n          </section>\n        </div>\n        {\n          offersInSelectedCity.length === 0\n            ? <MainScreenEmpty selectedCity={selectedCity}/>\n            : <OffersList selectedCity={selectedCity} offers={offersInSelectedCity} />\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default MainScreen;\n","import { useRef, FormEvent, MouseEvent } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { AppRoute, AuthorizationStatus, getRandomCity, validate } from '../../const/const';\nimport { getCity, redirectToRoute } from '../../store/action';\nimport { loginAction } from '../../store/api-actions';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\nimport Header from '../header/header';\n\nexport const INVALID_LOGIN_MESSAGE = 'Invalid email or password';\n\nexport const randomCity = getRandomCity();\n\nfunction LoginScreen():JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const isValidLogin = validate(loginRef.current?.value, passwordRef.current?.value);\n    if (!isValidLogin) {\n      toast.info(INVALID_LOGIN_MESSAGE);\n      return;\n    }\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      dispatch(loginAction({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      }));\n    }\n  };\n\n  const handleRandomCityClick = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    dispatch(getCity(randomCity));\n    dispatch(redirectToRoute(AppRoute.ROOT));\n  };\n\n  if (authorizationStatus === AuthorizationStatus.Auth) {\n    return <Redirect to={AppRoute.ROOT} />;\n  }\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <Header />\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form className=\"login__form form\" action=\"#\" method=\"post\" onSubmit={handleSubmit}>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  data-testid=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  ref={passwordRef}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  data-testid=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n              </div>\n              <button\n                className=\"login__submit form__submit button\"\n                type=\"submit\"\n                data-testid=\"submit\"\n              >\n                Sign in\n              </button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <a className=\"locations__item-link\" href=\"/\" onClick={handleRandomCityClick}>\n                <span>{randomCity}</span>\n              </a>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const/const';\n\nfunction Footer():JSX.Element {\n  return (\n    <footer className=\"footer\">\n      <Link className=\"footer__logo-link\" to={AppRoute.ROOT}>\n        <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import Header from '../header/header';\nimport Footer from '../footer/footer';\n\nfunction FavoritesScreenEmpty():JSX.Element {\n  return (\n    <div className=\"page page--favorites-empty\">\n      <Header isWithUserNavigation/>\n\n      <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites favorites--empty\">\n            <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n            <div className=\"favorites__status-wrapper\">\n              <b className=\"favorites__status\">Nothing yet saved.</b>\n              <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n            </div>\n          </section>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FavoritesScreenEmpty;\n","import { MouseEvent } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { cities, AppRoute } from '../../const/const';\nimport { getFavoriteOffers } from '../../store/reducers/offers/offers-selectors';\nimport { getCity, redirectToRoute } from '../../store/action';\nimport { FavoriteCitiesType } from '../../types/types';\nimport Card from '../card/card';\nimport FavoritesScreenEmpty from '../favorites-empty/favorites-empty';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\n\nfunction FavoritesScreen():JSX.Element {\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const favoriteCities: FavoriteCitiesType = {};\n  cities.map((city) => {\n    const cityFavoriteOffers = favoriteOffers.filter((offer) => offer.city.name === city);\n    if (cityFavoriteOffers.length > 0) {\n      return favoriteCities[city] = cityFavoriteOffers;\n    }\n    return null;\n  });\n\n  const dispatch = useDispatch();\n\n  const handleCityRedirect = (evt: MouseEvent<HTMLElement>) => {\n    evt.preventDefault();\n    const city = evt.currentTarget.getAttribute('data-city');\n    if (city) {\n      dispatch(getCity(city));\n    }\n    dispatch(redirectToRoute(AppRoute.ROOT));\n  };\n\n  if (favoriteOffers.length === 0) {\n    return <FavoritesScreenEmpty />;\n  }\n\n  return (\n    <div className=\"page\">\n      <Header isWithUserNavigation />\n      <main className=\"page__main page__main--favorites\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites\">\n            <h1 className=\"favorites__title\">Saved listing</h1>\n            <ul className=\"favorites__list\">\n              {\n                Object.entries(favoriteCities).map((entry) => (\n                  <li key={entry[0]} className=\"favorites__locations-items\">\n                    <div className=\"favorites__locations locations locations--current\">\n                      <div className=\"locations__item\">\n                        <a className=\"locations__item-link\" href=\"/\" onClick={handleCityRedirect} data-city={entry[0]}>\n                          <span>{entry[0]}</span>\n                        </a>\n                      </div>\n                    </div>\n                    <div className=\"favorites__places\">\n                      {\n                        entry[1].map((favoriteOffer) => <Card key={favoriteOffer.id} offer={favoriteOffer} isFavoriteScreen/>)\n                      }\n                    </div>\n                  </li>\n                ))\n              }\n            </ul>\n          </section>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default FavoritesScreen;\n","import { NameSpace } from '../root-reducer';\nimport { State, ReviewsType } from '../../../types/types';\n\nexport const getReviews = (state: State): ReviewsType[] | undefined => state[NameSpace.reviews].reviews;\nexport const getReviewPostStatus = (state: State): boolean => state[NameSpace.reviews].postSuccess;\nexport const getReviewPostError = (state: State): boolean => state[NameSpace.reviews].postError;\n","import { useState, ChangeEvent, SyntheticEvent, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { clearPostReviewStatus, clearPostReviewError } from '../../store/action';\nimport { postReview } from '../../store/api-actions';\nimport { getReviewPostStatus, getReviewPostError } from '../../store/reducers/reviews/reviews-selectors';\nimport { PostReviewType } from '../../types/types';\n\ntype OfferParams = {\n  id: string;\n};\n\nconst MIN_REVIEW_LENGTH = 50;\nconst MAX_REVIEW_LENGTH = 300;\n\nfunction ReviewForm():JSX.Element {\n  const params = useParams<OfferParams>();\n  const id = parseInt(params.id, 10);\n\n  const isPostSuccessfull = useSelector(getReviewPostStatus);\n  const isPostError = useSelector(getReviewPostError);\n\n  const dispatch = useDispatch();\n\n  const [review, setReview] = useState<PostReviewType>({\n    comment: '',\n    rating: 0,\n  });\n\n  const [disabledForm, setDisabledForm] = useState(false);\n\n  const {comment, rating} = review;\n  const isSubmitDisabled = comment.length < MIN_REVIEW_LENGTH || rating === 0;\n\n  const handleStarClick = (evt: ChangeEvent<HTMLInputElement>) => {\n    setReview({\n      comment,\n      rating: parseInt(evt.target.value, 10),\n    });\n  };\n\n  const handleTextareaChange = (evt: ChangeEvent<HTMLTextAreaElement>) =>  {\n    setReview({\n      comment: evt.target.value,\n      rating,\n    });\n  };\n\n  const handleSubmit = (evt: SyntheticEvent) => {\n    evt.preventDefault();\n    setDisabledForm(true);\n    dispatch(postReview(id, review));\n  };\n\n  useEffect(() => {\n    if (isPostSuccessfull) {\n      setReview({\n        comment: '',\n        rating: 0,\n      });\n      setDisabledForm(false);\n      dispatch(clearPostReviewStatus());\n    }\n    if (isPostError) {\n      setDisabledForm(false);\n      dispatch(clearPostReviewError());\n    }\n  }, [dispatch, isPostError, isPostSuccessfull]);\n\n  return (\n    <form className=\"reviews__form form\" action=\"#\" method=\"post\" onSubmit={handleSubmit}>\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\" >\n        <input className=\"form__rating-input visually-hidden\" name=\"rating\" value=\"5\" id=\"5-stars\" type=\"radio\" onChange={handleStarClick} checked={review.rating === 5} disabled={disabledForm}/>\n        <label htmlFor=\"5-stars\" className=\"reviews__rating-label form__rating-label\" title=\"perfect\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\" name=\"rating\" value=\"4\" id=\"4-stars\" type=\"radio\" onChange={handleStarClick} checked={review.rating === 4} disabled={disabledForm}/>\n        <label htmlFor=\"4-stars\" className=\"reviews__rating-label form__rating-label\" title=\"good\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\" name=\"rating\" value=\"3\" id=\"3-stars\" type=\"radio\" onChange={handleStarClick} checked={review.rating === 3} disabled={disabledForm}/>\n        <label htmlFor=\"3-stars\" className=\"reviews__rating-label form__rating-label\" title=\"not bad\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\" name=\"rating\" value=\"2\" id=\"2-stars\" type=\"radio\" onChange={handleStarClick} checked={review.rating === 2} disabled={disabledForm}/>\n        <label htmlFor=\"2-stars\" className=\"reviews__rating-label form__rating-label\" title=\"badly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input className=\"form__rating-input visually-hidden\" name=\"rating\" value=\"1\" id=\"1-star\" type=\"radio\" onChange={handleStarClick} checked={review.rating === 1} disabled={disabledForm}/>\n        <label htmlFor=\"1-star\" className=\"reviews__rating-label form__rating-label\" title=\"terribly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n      </div>\n      <textarea className=\"reviews__textarea form__textarea\" id=\"review\" name=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        onChange={handleTextareaChange}\n        value={comment}\n        maxLength={MAX_REVIEW_LENGTH}\n        disabled={disabledForm}\n      >\n      </textarea>\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set <span className=\"reviews__star\">rating</span> and describe your stay with at least <b className=\"reviews__text-amount\">50 characters</b>.\n        </p>\n        <button className=\"reviews__submit form__submit button\" type=\"submit\" disabled={isSubmitDisabled || disabledForm} >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ReviewForm;\n","import { useSelector } from 'react-redux';\nimport ReviewForm from '../review-form/review-form';\nimport { ReviewsType } from '../../types/types';\nimport { AuthorizationStatus, MAX_RATING } from '../../const/const';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\n\ntype ReviewsListProps = {\n  reviews: ReviewsType[];\n}\n\nconst MAX_NUMBER_OF_REVIEWS = 10;\n\nfunction ReviewsList({reviews}: ReviewsListProps):JSX.Element {\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const sortedReviews = reviews.length >= 10\n    ? reviews.slice(reviews.length - MAX_NUMBER_OF_REVIEWS, reviews.length).reverse()\n    : reviews.slice().reverse();\n  return (\n    <section className=\"property__reviews reviews\">\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{sortedReviews?.length}</span></h2>\n      <ul className=\"reviews__list\">\n        {\n          sortedReviews.map((review) => {\n            const date = new Date(review.date);\n            const dateTime = date.toISOString().substring(0,10);\n            const monthYear = date.toLocaleString('default', { month: 'long' , year: 'numeric'});\n\n            return (\n              <li key={review.id} className=\"reviews__item\">\n                <div className=\"reviews__user user\">\n                  <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n                    <img className=\"reviews__avatar user__avatar\" src={review.user.avatarUrl} width=\"54\" height=\"54\" alt=\"Reviews avatar\" />\n                  </div>\n                  <span className=\"reviews__user-name\">\n                    {review.user.name}\n                  </span>\n                </div>\n                <div className=\"reviews__info\">\n                  <div className=\"reviews__rating rating\">\n                    <div className=\"reviews__stars rating__stars\">\n                      <span style={{width: `${review.rating / MAX_RATING * 100}%`}}></span>\n                      <span className=\"visually-hidden\">Rating</span>\n                    </div>\n                  </div>\n                  <p className=\"reviews__text\">\n                    {review.comment}\n                  </p>\n                  <time className=\"reviews__time\" dateTime={dateTime}>{monthYear}</time>\n                </div>\n              </li>\n            );\n          })\n        }\n      </ul>\n      {\n        authorizationStatus === AuthorizationStatus.Auth\n          ? <ReviewForm />\n          : ''\n      }\n    </section>\n  );\n}\n\nexport default ReviewsList;\n","import style from './styles.module.css';\n\nfunction LoadingScreen(): JSX.Element {\n  return (\n    <div className={style.loader}>\n      <div className=\"visually-hidden\">The page is loading</div>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RoomTypes, MAX_RATING } from '../../const/const';\nimport ReviewsList from '../reviews-list/reviews-list';\nimport Map from '../map/map';\nimport Card from '../card/card';\nimport { useEffect } from 'react';\nimport { fetchNearByOffersAction, fetchOfferByIDAction, fetchReviewsAction } from '../../store/api-actions';\nimport { clearOfferByID } from '../../store/action';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport Header from '../header/header';\nimport { getFavoriteOffersMemo, getNearbyOffers, getOfferByID } from '../../store/reducers/offers/offers-selectors';\nimport { getReviews } from '../../store/reducers/reviews/reviews-selectors';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\nimport { handleFavoriteClickAction } from '../../utils/utils';\n\ntype OfferParams = {\n  id: string;\n};\n\nconst MAX_NUMBER_OF_IMAGES = 6;\n\nfunction PropertyScreen():JSX.Element {\n  const params = useParams<OfferParams>();\n  const id = parseInt(params.id, 10);\n\n  const offer = useSelector(getOfferByID);\n  const nearbyOffers = useSelector(getNearbyOffers);\n  const reviews = useSelector(getReviews);\n  const isFavorite = useSelector(getFavoriteOffersMemo(id));\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const dispatch = useDispatch();\n\n  const handleFavoriteClick = () => dispatch(handleFavoriteClickAction(authorizationStatus, isFavorite, id));\n\n  useEffect(() => {\n    dispatch(fetchOfferByIDAction(id));\n    dispatch(fetchNearByOffersAction(id));\n    dispatch(fetchReviewsAction(id));\n    window.scrollTo(0, 0);\n    return ()  => {dispatch(clearOfferByID());};\n  }, [dispatch, id]);\n\n  if (!offer) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  const {images, isPremium, title, rating, type, bedrooms, maxAdults, price, goods, host, description} = offer;\n  const {avatarUrl, isPro, name} = host;\n\n  return (\n    <div className=\"page\">\n      <Header isWithUserNavigation />\n\n      <main className=\"page__main page__main--property\">\n        <section className=\"property\">\n          <div className=\"property__gallery-container container\">\n            <div className=\"property__gallery\">\n              {\n                images.slice(0, MAX_NUMBER_OF_IMAGES).map((image) =>  (\n                  <div key={image} className=\"property__image-wrapper\">\n                    <img className=\"property__image\" src={image} alt=\"Property\" />\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n          <div className=\"property__container container\">\n            <div className=\"property__wrapper\">\n              {\n                isPremium\n                  ?\n                  <div className=\"property__mark\">\n                    <span>Premium</span>\n                  </div>\n                  : ''\n              }\n              <div className=\"property__name-wrapper\">\n                <h1 className=\"property__name\">{title}</h1>\n                <button\n                  className={`property__bookmark-button ${isFavorite ? 'property__bookmark-button--active' : ''} button`}\n                  type=\"button\"\n                  onClick={handleFavoriteClick}\n                >\n                  <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                    <use xlinkHref=\"#icon-bookmark\"></use>\n                  </svg>\n                  <span className=\"visually-hidden\">To bookmarks</span>\n                </button>\n              </div>\n              <div className=\"property__rating rating\">\n                <div className=\"property__stars rating__stars\">\n                  <span style={{width: `${Math.round(rating) / MAX_RATING * 100}%`}}></span>\n                  <span className=\"visually-hidden\">Rating</span>\n                </div>\n                <span className=\"property__rating-value rating__value\">{Math.round(rating)}</span>\n              </div>\n              <ul className=\"property__features\">\n                <li className=\"property__feature property__feature--entire\">\n                  {RoomTypes[type.toUpperCase()]}\n                </li>\n                <li className=\"property__feature property__feature--bedrooms\">\n                  {bedrooms === 1 ? '1 Bedroom' : `${bedrooms} Bedrooms`}\n                </li>\n                <li className=\"property__feature property__feature--adults\">\n                  Max {maxAdults} adults\n                </li>\n              </ul>\n              <div className=\"property__price\">\n                <b className=\"property__price-value\">&euro;{price}</b>\n                <span className=\"property__price-text\">&nbsp;night</span>\n              </div>\n              <div className=\"property__inside\">\n                <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n                <ul className=\"property__inside-list\">\n                  {goods.map((item) => (\n                    <li key={item} className=\"property__inside-item\">\n                      {item}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n              <div className=\"property__host\">\n                <h2 className=\"property__host-title\">Meet the host</h2>\n                <div className=\"property__host-user user\">\n                  <div className=\"property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper\">\n                    <img className=\"property__avatar user__avatar\" src={avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\" />\n                  </div>\n                  <span className=\"property__user-name\">\n                    {name}\n                  </span>\n                  {\n                    isPro\n                      ?\n                      <span className=\"property__user-status\">\n                        Pro\n                      </span>\n                      : ''\n                  }\n                </div>\n                <div className=\"property__description\">\n                  <p className=\"property__text\">\n                    {description}\n                  </p>\n                </div>\n              </div>\n              {\n                reviews\n                  ? <ReviewsList reviews={reviews}/>\n                  : ''\n              }\n            </div>\n          </div>\n          <section className=\"property__map map\">\n            {\n              nearbyOffers\n                ? <Map offers={[offer, ...nearbyOffers]} selectedPoint={id}/>\n                :  ''\n            }\n          </section>\n        </section>\n        <div className=\"container\">\n          <section className=\"near-places places\">\n            <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n            <div className=\"near-places__list places__list\">\n              {\n                nearbyOffers\n                  ? nearbyOffers.map((nearbyOffer) => <Card key={nearbyOffer.id} offer={nearbyOffer} isPropertyScreen />)\n                  : ''\n              }\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default PropertyScreen;\n","import Footer from '../footer/footer';\n\nfunction Screen404():JSX.Element {\n  return (\n    <div className=\"page page--favorites-empty\">\n\n      <main className=\"page__main page__main--favorites-empty\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites favorites--empty\">\n            <h1 style={{textAlign: 'center'}}>404 Page Not Found</h1>\n          </section>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Screen404;\n","import { Route, Redirect } from 'react-router-dom';\nimport { RouteProps } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const/const';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\n\ntype PrivateRouteProps = RouteProps & {\n  render: () => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const {exact, path, render} = props;\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={() => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render()\n          : <Redirect to={AppRoute.LOGIN} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport MainScreen from '../main/main';\nimport LoginScreen from '../login/login';\nimport FavoritesScreen from '../favorites/favorites';\nimport PropertyScreen from '../property/property';\nimport Screen404 from '../screen-404/screen-404';\nimport PrivateRoute from '../private-route/private-route';\nimport { AppRoute } from '../../const/const';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { isCheckedAuth } from '../../const/const';\nimport { getLoadedDataStatus } from '../../store/reducers/offers/offers-selectors';\nimport { getAuthorizationStatus } from '../../store/reducers/user/user-selectors';\n\n\nfunction App(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const isDataLoaded = useSelector(getLoadedDataStatus);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path={AppRoute.ROOT} exact>\n        <MainScreen />\n      </Route>\n      <Route path={AppRoute.LOGIN} exact>\n        <LoginScreen />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.FAVORITE}\n        render={()=> <FavoritesScreen/>}\n      >\n      </PrivateRoute>\n      <Route path={`${AppRoute.OFFER}/:id`}>\n        <PropertyScreen />\n      </Route>\n      <Route path={AppRoute.NOT_FOUND}>\n        <Screen404 />\n      </Route>\n      <Route>\n        <Screen404 />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createBrowserHistory } from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history/browser-history';\nimport { Middleware } from 'redux';\nimport { ActionType } from '../../const/const';\nimport { State } from '../../types/types';\n\nexport const redirect: Middleware<unknown, State> =\n(_store) =>\n  (next) =>\n    (action) => {\n\n      if (action.type === ActionType.RedirectToRoute) {\n        browserHistory.push(action.payload.url);\n      }\n      return next(action);\n    };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createAPI } from './services/api';\nimport { Provider } from 'react-redux';\nimport App from './components/app/app';\nimport { Router as BrowserRouter } from 'react-router-dom';\nimport { rootReducer } from './store/reducers/root-reducer';\nimport { requireAuthorization } from './store/action';\nimport { fetchDataAction, checkAuthAction, fetchFavoriteOffers } from './store/api-actions';\nimport { AuthorizationStatus } from './const/const';\nimport { redirect } from './store/middleware/redirect';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport browserHistory from './browser-history/browser-history';\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuthAction());\nstore.dispatch(fetchDataAction());\nstore.dispatch(fetchFavoriteOffers());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory}>\n        <ToastContainer />\n        <App/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}